(()=>{"use strict";var n={713:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,'.main__find-user {\n  display: flex;\n  justify-content: center;\n  margin: 2rem 0;\n  width: 90%;\n}\n\n.main__form-instruction {\n  display: flex;\n  align-items: center;\n  /* background: linear-gradient(\n    345deg,\n    var(--purpleElementsColor) 0%,\n    var(--purpleElementsColorHover) 30%,\n    var(--purpleElementsColorHover) 50%,\n    var(--purpleElementsColorHover) 70%,\n    var(--purpleElementsColor) 100%\n  );\n  background-color: var(--purpleElementsColor); */\n\n  border: 3px solid var(--buttonGreyColor);\n  border-radius: 10px;\n  margin-top: 2rem;\n  padding: 2rem 2rem;\n  display: flex;\n  justify-content: center;\n  width: 90%;\n}\n\n.fa-search {\n  font-size: 2em;\n  color: var(--purpleElementsColor);\n}\n\n.form-instruction__text {\n  text-align: center;\n  font-size: 1.3rem;\n  color: var(--purpleElementsColor);\n  font-weight: 500;\n}\n\n.find-user__form {\n  width: 100%;\n  display: grid;\n  grid-template-columns: 80% 20%;\n}\n\n.form__input {\n  font-family: "Poppins", sans-serif;\n  border: none;\n  font-size: 1.3rem;\n  color: var(--darkFontColor);\n}\n\n.form__input--username {\n  border: 1px solid var(--fontGreyColor);\n  border-radius: 6px 0 0 6px;\n  padding: 0.75rem 1rem;\n  width: 100%;\n  background-color: var(--mainBgc);\n}\n\n.form__input--username::placeholder {\n  color: var(--fontGreyColor);\n}\n\n.form__input--username:focus {\n  outline: 2px solid var(--purpleElementsColor);\n  outline-offset: -2px;\n}\n\n.form__input--submit {\n  border: none;\n  border-radius: 0 6px 6px 0;\n  /* background-color: var(--purpleElementsColor); */\n  background-color: var(--fontGreyColor);\n  letter-spacing: 0.05rem;\n  color: var(--whiteColor);\n  padding: 0.5rem 1.4rem;\n  width: 100%;\n  transform: translate3d(0, 0, 0);\n  transition: 0.15s ease-in-out;\n  -webkit-appearance: none;\n}\n\n.form__input--submit:hover {\n  background-color: var(--purpleElementsColorHover);\n  cursor: pointer;\n}\n\n@media (min-width: 768px) {\n  .main__find-user {\n    width: 100%;\n  }\n\n  .main__form-instruction {\n    width: 100%;\n  }\n\n  .form__input {\n    font-size: 1.4rem;\n  }\n}\n',"",{version:3,sources:["webpack://./src/styles/form.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,uBAAuB;EACvB,cAAc;EACd,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB;;;;;;;;iDAQ+C;;EAE/C,wCAAwC;EACxC,mBAAmB;EACnB,gBAAgB;EAChB,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,UAAU;AACZ;;AAEA;EACE,cAAc;EACd,iCAAiC;AACnC;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,iCAAiC;EACjC,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,kCAAkC;EAClC,YAAY;EACZ,iBAAiB;EACjB,2BAA2B;AAC7B;;AAEA;EACE,sCAAsC;EACtC,0BAA0B;EAC1B,qBAAqB;EACrB,WAAW;EACX,gCAAgC;AAClC;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,6CAA6C;EAC7C,oBAAoB;AACtB;;AAEA;EACE,YAAY;EACZ,0BAA0B;EAC1B,kDAAkD;EAClD,sCAAsC;EACtC,uBAAuB;EACvB,wBAAwB;EACxB,sBAAsB;EACtB,WAAW;EACX,+BAA+B;EAC/B,6BAA6B;EAC7B,wBAAwB;AAC1B;;AAEA;EACE,iDAAiD;EACjD,eAAe;AACjB;;AAEA;EACE;IACE,WAAW;EACb;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,iBAAiB;EACnB;AACF",sourcesContent:['.main__find-user {\n  display: flex;\n  justify-content: center;\n  margin: 2rem 0;\n  width: 90%;\n}\n\n.main__form-instruction {\n  display: flex;\n  align-items: center;\n  /* background: linear-gradient(\n    345deg,\n    var(--purpleElementsColor) 0%,\n    var(--purpleElementsColorHover) 30%,\n    var(--purpleElementsColorHover) 50%,\n    var(--purpleElementsColorHover) 70%,\n    var(--purpleElementsColor) 100%\n  );\n  background-color: var(--purpleElementsColor); */\n\n  border: 3px solid var(--buttonGreyColor);\n  border-radius: 10px;\n  margin-top: 2rem;\n  padding: 2rem 2rem;\n  display: flex;\n  justify-content: center;\n  width: 90%;\n}\n\n.fa-search {\n  font-size: 2em;\n  color: var(--purpleElementsColor);\n}\n\n.form-instruction__text {\n  text-align: center;\n  font-size: 1.3rem;\n  color: var(--purpleElementsColor);\n  font-weight: 500;\n}\n\n.find-user__form {\n  width: 100%;\n  display: grid;\n  grid-template-columns: 80% 20%;\n}\n\n.form__input {\n  font-family: "Poppins", sans-serif;\n  border: none;\n  font-size: 1.3rem;\n  color: var(--darkFontColor);\n}\n\n.form__input--username {\n  border: 1px solid var(--fontGreyColor);\n  border-radius: 6px 0 0 6px;\n  padding: 0.75rem 1rem;\n  width: 100%;\n  background-color: var(--mainBgc);\n}\n\n.form__input--username::placeholder {\n  color: var(--fontGreyColor);\n}\n\n.form__input--username:focus {\n  outline: 2px solid var(--purpleElementsColor);\n  outline-offset: -2px;\n}\n\n.form__input--submit {\n  border: none;\n  border-radius: 0 6px 6px 0;\n  /* background-color: var(--purpleElementsColor); */\n  background-color: var(--fontGreyColor);\n  letter-spacing: 0.05rem;\n  color: var(--whiteColor);\n  padding: 0.5rem 1.4rem;\n  width: 100%;\n  transform: translate3d(0, 0, 0);\n  transition: 0.15s ease-in-out;\n  -webkit-appearance: none;\n}\n\n.form__input--submit:hover {\n  background-color: var(--purpleElementsColorHover);\n  cursor: pointer;\n}\n\n@media (min-width: 768px) {\n  .main__find-user {\n    width: 100%;\n  }\n\n  .main__form-instruction {\n    width: 100%;\n  }\n\n  .form__input {\n    font-size: 1.4rem;\n  }\n}\n'],sourceRoot:""}]);const s=a},756:(n,e,t)=>{t.d(e,{Z:()=>h});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),s=t(951),A=t(713),l=t(373),c=t(667),u=t.n(c),p=new URL(t(244),t.b),d=new URL(t(154),t.b),m=a()(o());m.i(s.Z),m.i(A.Z),m.i(l.Z);var f=u()(p),C=u()(d);m.push([n.id,':root {\n  --blackColor: #000000;\n  --blueElementsColor: #19dbfe;\n  --buttonGreyColor: #f2f2f2;\n  --darkFontColor: #333333;\n  --fontGreyColor: #b6b6b6;\n  --fontDescriptionColor: #9e9e9e;\n  --mainBgc: #fcfcfc;\n  --purpleElementsColor: #2b00d4;\n  --purpleElementsColorHover: #7254ec;\n  --whiteColor: #ffffff;\n  --starColor: #ffd700;\n  --jsColor: #efd81d;\n  --errorBorder: #ff0033;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: "Poppins", sans-serif;\n  font-size: 10px;\n}\n\nbody {\n  width: 100%;\n  background-color: var(--mainBgc);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.wrapper {\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n}\n\n.main {\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n@media (min-width: 768px) {\n  .wrapper {\n    width: 100%;\n  }\n  .wrapper::before {\n    width: 100%;\n    height: 100%;\n    content: " ";\n    background-image: url('+f+');\n    background-repeat: no-repeat;\n    position: absolute;\n    opacity: 0.07;\n    z-index: -1;\n    left: 0;\n    top: -20px;\n  }\n\n  .wrapper::after {\n    width: 100%;\n    height: 100%;\n    content: " ";\n    background-image: url('+C+");\n    background-repeat: no-repeat;\n    position: absolute;\n    opacity: 0.05;\n    z-index: -1;\n    left: 0;\n    top: 0;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAIA;EACE,qBAAqB;EACrB,4BAA4B;EAC5B,0BAA0B;EAC1B,wBAAwB;EACxB,wBAAwB;EACxB,+BAA+B;EAC/B,kBAAkB;EAClB,8BAA8B;EAC9B,mCAAmC;EACnC,qBAAqB;EACrB,oBAAoB;EACpB,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,kCAAkC;EAClC,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,gCAAgC;EAChC,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE;IACE,WAAW;EACb;EACA;IACE,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,yDAAyC;IACzC,4BAA4B;IAC5B,kBAAkB;IAClB,aAAa;IACb,WAAW;IACX,OAAO;IACP,UAAU;EACZ;;EAEA;IACE,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,yDAAyC;IACzC,4BAA4B;IAC5B,kBAAkB;IAClB,aAAa;IACb,WAAW;IACX,OAAO;IACP,MAAM;EACR;AACF",sourcesContent:['@import "./top.css";\n@import "./form.css";\n@import "./repo.css";\n\n:root {\n  --blackColor: #000000;\n  --blueElementsColor: #19dbfe;\n  --buttonGreyColor: #f2f2f2;\n  --darkFontColor: #333333;\n  --fontGreyColor: #b6b6b6;\n  --fontDescriptionColor: #9e9e9e;\n  --mainBgc: #fcfcfc;\n  --purpleElementsColor: #2b00d4;\n  --purpleElementsColorHover: #7254ec;\n  --whiteColor: #ffffff;\n  --starColor: #ffd700;\n  --jsColor: #efd81d;\n  --errorBorder: #ff0033;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: "Poppins", sans-serif;\n  font-size: 10px;\n}\n\nbody {\n  width: 100%;\n  background-color: var(--mainBgc);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.wrapper {\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n}\n\n.main {\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n@media (min-width: 768px) {\n  .wrapper {\n    width: 100%;\n  }\n  .wrapper::before {\n    width: 100%;\n    height: 100%;\n    content: " ";\n    background-image: url(../assets/bg_1.svg);\n    background-repeat: no-repeat;\n    position: absolute;\n    opacity: 0.07;\n    z-index: -1;\n    left: 0;\n    top: -20px;\n  }\n\n  .wrapper::after {\n    width: 100%;\n    height: 100%;\n    content: " ";\n    background-image: url(../assets/bg_2.svg);\n    background-repeat: no-repeat;\n    position: absolute;\n    opacity: 0.05;\n    z-index: -1;\n    left: 0;\n    top: 0;\n  }\n}\n'],sourceRoot:""}]);const h=m},373:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".main__repositories,\n.repositories__user,\n.user__picture {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: var(--darkFontColor);\n}\n\n.repositories__loading--active {\n  display: flex;\n}\n\n.repositories__user {\n  display: none;\n  margin-top: 2rem;\n}\n\n.repositories__user--active {\n  display: flex;\n}\n\n.user__name {\n  margin: 0.5rem 0 1.5rem 0;\n  color: var(--fontGreyColor);\n}\n\n.user__img {\n  width: 50%;\n  max-width: 400px;\n  border-radius: 50%;\n}\n\n.repositories__list {\n  width: 90%;\n  list-style: none;\n}\n\n.list__element {\n  width: 100%;\n  border: 1px solid var(--buttonGreyColor);\n  border-radius: 5px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\n.element-repo-name__title {\n  font-size: 1.8rem;\n  margin-bottom: 0.3rem;\n  color: var(--purpleElementsColor);\n}\n\n.element-repo-name__id {\n  font-size: 1.1rem;\n  font-weight: 400;\n  color: var(--fontGreyColor);\n}\n\n.list__element-repo-desc {\n  margin: 1rem 0;\n}\n\n.element-repo-desc__text {\n  color: var(--fontDescriptionColor);\n  font-size: 1.15rem;\n}\n\n.list__element-repo-details {\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.2rem;\n  margin-top: 1rem;\n}\n\n.fas {\n  margin-right: 0.5rem;\n}\n\n.fa-circle {\n  font-size: 0.8em;\n  color: var(--jsColor);\n}\n\n.fa-star {\n  color: var(--starColor);\n}\n\n/* prototype */\n\n.list__element--prototype {\n  display: none;\n}\n\n@media (min-width: 768px) {\n  .repositories__user {\n    margin-top: 3rem;\n  }\n  .user__name {\n    margin: 1rem 0 3rem 0;\n  }\n\n  .repositories__list {\n    width: 100%;\n  }\n\n  .list__element {\n    max-width: 600px;\n    margin-bottom: 1.5rem;\n  }\n\n  .list__element-repo-name {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .element-repo-name__title {\n    width: 85%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: 2.3rem;\n    margin-bottom: 0.5rem;\n  }\n\n  .list__element-repo-desc {\n    margin-bottom: 1.5rem;\n  }\n\n  .element-repo-desc__text {\n    color: var(--fontDescriptionColor);\n    font-size: 1.3rem;\n  }\n\n  .list__element-repo-details {\n    font-size: 1.3rem;\n  }\n\n  .list__element-repo-details {\n    display: grid;\n    grid-template-columns: calc(100% / 3) calc(100% / 3) calc(100% / 3);\n    justify-items: center;\n    font-size: 1.3rem;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/repo.css"],names:[],mappings:"AAAA;;;EAGE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,2BAA2B;AAC7B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,yBAAyB;EACzB,2BAA2B;AAC7B;;AAEA;EACE,UAAU;EACV,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,UAAU;EACV,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,wCAAwC;EACxC,kBAAkB;EAClB,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,qBAAqB;EACrB,iCAAiC;AACnC;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,2BAA2B;AAC7B;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,kCAAkC;EAClC,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,gBAAgB;EAChB,qBAAqB;AACvB;;AAEA;EACE,uBAAuB;AACzB;;AAEA,cAAc;;AAEd;EACE,aAAa;AACf;;AAEA;EACE;IACE,gBAAgB;EAClB;EACA;IACE,qBAAqB;EACvB;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,gBAAgB;IAChB,qBAAqB;EACvB;;EAEA;IACE,aAAa;IACb,mBAAmB;IACnB,8BAA8B;EAChC;;EAEA;IACE,UAAU;IACV,gBAAgB;IAChB,uBAAuB;IACvB,iBAAiB;IACjB,qBAAqB;EACvB;;EAEA;IACE,qBAAqB;EACvB;;EAEA;IACE,kCAAkC;IAClC,iBAAiB;EACnB;;EAEA;IACE,iBAAiB;EACnB;;EAEA;IACE,aAAa;IACb,mEAAmE;IACnE,qBAAqB;IACrB,iBAAiB;EACnB;AACF",sourcesContent:[".main__repositories,\n.repositories__user,\n.user__picture {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: var(--darkFontColor);\n}\n\n.repositories__loading--active {\n  display: flex;\n}\n\n.repositories__user {\n  display: none;\n  margin-top: 2rem;\n}\n\n.repositories__user--active {\n  display: flex;\n}\n\n.user__name {\n  margin: 0.5rem 0 1.5rem 0;\n  color: var(--fontGreyColor);\n}\n\n.user__img {\n  width: 50%;\n  max-width: 400px;\n  border-radius: 50%;\n}\n\n.repositories__list {\n  width: 90%;\n  list-style: none;\n}\n\n.list__element {\n  width: 100%;\n  border: 1px solid var(--buttonGreyColor);\n  border-radius: 5px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\n.element-repo-name__title {\n  font-size: 1.8rem;\n  margin-bottom: 0.3rem;\n  color: var(--purpleElementsColor);\n}\n\n.element-repo-name__id {\n  font-size: 1.1rem;\n  font-weight: 400;\n  color: var(--fontGreyColor);\n}\n\n.list__element-repo-desc {\n  margin: 1rem 0;\n}\n\n.element-repo-desc__text {\n  color: var(--fontDescriptionColor);\n  font-size: 1.15rem;\n}\n\n.list__element-repo-details {\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.2rem;\n  margin-top: 1rem;\n}\n\n.fas {\n  margin-right: 0.5rem;\n}\n\n.fa-circle {\n  font-size: 0.8em;\n  color: var(--jsColor);\n}\n\n.fa-star {\n  color: var(--starColor);\n}\n\n/* prototype */\n\n.list__element--prototype {\n  display: none;\n}\n\n@media (min-width: 768px) {\n  .repositories__user {\n    margin-top: 3rem;\n  }\n  .user__name {\n    margin: 1rem 0 3rem 0;\n  }\n\n  .repositories__list {\n    width: 100%;\n  }\n\n  .list__element {\n    max-width: 600px;\n    margin-bottom: 1.5rem;\n  }\n\n  .list__element-repo-name {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .element-repo-name__title {\n    width: 85%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: 2.3rem;\n    margin-bottom: 0.5rem;\n  }\n\n  .list__element-repo-desc {\n    margin-bottom: 1.5rem;\n  }\n\n  .element-repo-desc__text {\n    color: var(--fontDescriptionColor);\n    font-size: 1.3rem;\n  }\n\n  .list__element-repo-details {\n    font-size: 1.3rem;\n  }\n\n  .list__element-repo-details {\n    display: grid;\n    grid-template-columns: calc(100% / 3) calc(100% / 3) calc(100% / 3);\n    justify-items: center;\n    font-size: 1.3rem;\n  }\n}\n"],sourceRoot:""}]);const s=a},951:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".header {\n  margin: 3rem 0 2rem 0;\n  animation-duration: 1.3s;\n  animation-name: headerOpening;\n  animation-iteration-count: 1;\n}\n\n.header__title {\n  font-size: 3rem;\n  color: var(--purpleElementsColor);\n}\n\n.header__title--color {\n  color: var(--blueElementsColor);\n}\n\n.header__title,\n.header__title--color {\n  font-weight: 600;\n}\n\n.fa-github {\n  font-size: 0.75em;\n  margin-left: 0.05em;\n}\n\n@keyframes headerOpening {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n@media (min-width: 768px) {\n  .header {\n    margin-top: 10rem;\n  }\n\n  .header__title {\n    font-size: 4rem;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/top.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,wBAAwB;EACxB,6BAA6B;EAC7B,4BAA4B;AAC9B;;AAEA;EACE,eAAe;EACf,iCAAiC;AACnC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;;EAEE,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE;IACE,UAAU;EACZ;;EAEA;IACE,UAAU;EACZ;AACF;;AAEA;EACE;IACE,iBAAiB;EACnB;;EAEA;IACE,eAAe;EACjB;AACF",sourcesContent:[".header {\n  margin: 3rem 0 2rem 0;\n  animation-duration: 1.3s;\n  animation-name: headerOpening;\n  animation-iteration-count: 1;\n}\n\n.header__title {\n  font-size: 3rem;\n  color: var(--purpleElementsColor);\n}\n\n.header__title--color {\n  color: var(--blueElementsColor);\n}\n\n.header__title,\n.header__title--color {\n  font-weight: 600;\n}\n\n.fa-github {\n  font-size: 0.75em;\n  margin-left: 0.05em;\n}\n\n@keyframes headerOpening {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n@media (min-width: 768px) {\n  .header {\n    margin-top: 10rem;\n  }\n\n  .header__title {\n    font-size: 4rem;\n  }\n}\n"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);r&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],s=0;s<n.length;s++){var A=n[s],l=r.base?A[0]+r.base:A[0],c=i[l]||0,u="".concat(l," ").concat(c);i[l]=c+1;var p=t(u),d={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(d);else{var m=o(d,r);r.byIndex=s,e.splice(s,0,{identifier:u,updater:m,references:1})}a.push(u)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var A=r(n,o),l=0;l<i.length;l++){var c=t(i[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},244:(n,e,t)=>{n.exports=t.p+"b806803127dfe9e30a2d.svg"},154:(n,e,t)=>{n.exports=t.p+"95c79d43670629839c14.svg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n="undefined"!=typeof globalThis&&globalThis||"undefined"!=typeof self&&self||void 0!==n&&n,e="URLSearchParams"in n,t="Symbol"in n&&"iterator"in Symbol,r="FileReader"in n&&"Blob"in n&&function(){try{return new Blob,!0}catch(n){return!1}}(),o="FormData"in n,i="ArrayBuffer"in n;if(i)var a=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],s=ArrayBuffer.isView||function(n){return n&&a.indexOf(Object.prototype.toString.call(n))>-1};function A(n){if("string"!=typeof n&&(n=String(n)),/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(n)||""===n)throw new TypeError('Invalid character in header field name: "'+n+'"');return n.toLowerCase()}function l(n){return"string"!=typeof n&&(n=String(n)),n}function c(n){var e={next:function(){var e=n.shift();return{done:void 0===e,value:e}}};return t&&(e[Symbol.iterator]=function(){return e}),e}function u(n){this.map={},n instanceof u?n.forEach((function(n,e){this.append(e,n)}),this):Array.isArray(n)?n.forEach((function(n){this.append(n[0],n[1])}),this):n&&Object.getOwnPropertyNames(n).forEach((function(e){this.append(e,n[e])}),this)}function p(n){if(n.bodyUsed)return Promise.reject(new TypeError("Already read"));n.bodyUsed=!0}function d(n){return new Promise((function(e,t){n.onload=function(){e(n.result)},n.onerror=function(){t(n.error)}}))}function m(n){var e=new FileReader,t=d(e);return e.readAsArrayBuffer(n),t}function f(n){if(n.slice)return n.slice(0);var e=new Uint8Array(n.byteLength);return e.set(new Uint8Array(n)),e.buffer}function C(){return this.bodyUsed=!1,this._initBody=function(n){var t;this.bodyUsed=this.bodyUsed,this._bodyInit=n,n?"string"==typeof n?this._bodyText=n:r&&Blob.prototype.isPrototypeOf(n)?this._bodyBlob=n:o&&FormData.prototype.isPrototypeOf(n)?this._bodyFormData=n:e&&URLSearchParams.prototype.isPrototypeOf(n)?this._bodyText=n.toString():i&&r&&(t=n)&&DataView.prototype.isPrototypeOf(t)?(this._bodyArrayBuffer=f(n.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):i&&(ArrayBuffer.prototype.isPrototypeOf(n)||s(n))?this._bodyArrayBuffer=f(n):this._bodyText=n=Object.prototype.toString.call(n):this._bodyText="",this.headers.get("content-type")||("string"==typeof n?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):e&&URLSearchParams.prototype.isPrototypeOf(n)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},r&&(this.blob=function(){var n=p(this);if(n)return n;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?p(this)||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer)):this.blob().then(m)}),this.text=function(){var n,e,t,r=p(this);if(r)return r;if(this._bodyBlob)return n=this._bodyBlob,t=d(e=new FileReader),e.readAsText(n),t;if(this._bodyArrayBuffer)return Promise.resolve(function(n){for(var e=new Uint8Array(n),t=new Array(e.length),r=0;r<e.length;r++)t[r]=String.fromCharCode(e[r]);return t.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},o&&(this.formData=function(){return this.text().then(B)}),this.json=function(){return this.text().then(JSON.parse)},this}u.prototype.append=function(n,e){n=A(n),e=l(e);var t=this.map[n];this.map[n]=t?t+", "+e:e},u.prototype.delete=function(n){delete this.map[A(n)]},u.prototype.get=function(n){return n=A(n),this.has(n)?this.map[n]:null},u.prototype.has=function(n){return this.map.hasOwnProperty(A(n))},u.prototype.set=function(n,e){this.map[A(n)]=l(e)},u.prototype.forEach=function(n,e){for(var t in this.map)this.map.hasOwnProperty(t)&&n.call(e,this.map[t],t,this)},u.prototype.keys=function(){var n=[];return this.forEach((function(e,t){n.push(t)})),c(n)},u.prototype.values=function(){var n=[];return this.forEach((function(e){n.push(e)})),c(n)},u.prototype.entries=function(){var n=[];return this.forEach((function(e,t){n.push([t,e])})),c(n)},t&&(u.prototype[Symbol.iterator]=u.prototype.entries);var h=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function E(n,e){if(!(this instanceof E))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');var t,r,o=(e=e||{}).body;if(n instanceof E){if(n.bodyUsed)throw new TypeError("Already read");this.url=n.url,this.credentials=n.credentials,e.headers||(this.headers=new u(n.headers)),this.method=n.method,this.mode=n.mode,this.signal=n.signal,o||null==n._bodyInit||(o=n._bodyInit,n.bodyUsed=!0)}else this.url=String(n);if(this.credentials=e.credentials||this.credentials||"same-origin",!e.headers&&this.headers||(this.headers=new u(e.headers)),this.method=(r=(t=e.method||this.method||"GET").toUpperCase(),h.indexOf(r)>-1?r:t),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&o)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(o),!("GET"!==this.method&&"HEAD"!==this.method||"no-store"!==e.cache&&"no-cache"!==e.cache)){var i=/([?&])_=[^&]*/;i.test(this.url)?this.url=this.url.replace(i,"$1_="+(new Date).getTime()):this.url+=(/\?/.test(this.url)?"&":"?")+"_="+(new Date).getTime()}}function B(n){var e=new FormData;return n.trim().split("&").forEach((function(n){if(n){var t=n.split("="),r=t.shift().replace(/\+/g," "),o=t.join("=").replace(/\+/g," ");e.append(decodeURIComponent(r),decodeURIComponent(o))}})),e}function y(n,e){if(!(this instanceof y))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');e||(e={}),this.type="default",this.status=void 0===e.status?200:e.status,this.ok=this.status>=200&&this.status<300,this.statusText=void 0===e.statusText?"":""+e.statusText,this.headers=new u(e.headers),this.url=e.url||"",this._initBody(n)}E.prototype.clone=function(){return new E(this,{body:this._bodyInit})},C.call(E.prototype),C.call(y.prototype),y.prototype.clone=function(){return new y(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new u(this.headers),url:this.url})},y.error=function(){var n=new y(null,{status:0,statusText:""});return n.type="error",n};var g=[301,302,303,307,308];y.redirect=function(n,e){if(-1===g.indexOf(e))throw new RangeError("Invalid status code");return new y(null,{status:e,headers:{location:n}})};var b=n.DOMException;try{new b}catch(n){(b=function(n,e){this.message=n,this.name=e;var t=Error(n);this.stack=t.stack}).prototype=Object.create(Error.prototype),b.prototype.constructor=b}function _(e,t){return new Promise((function(o,a){var s=new E(e,t);if(s.signal&&s.signal.aborted)return a(new b("Aborted","AbortError"));var A=new XMLHttpRequest;function c(){A.abort()}A.onload=function(){var n,e,t={status:A.status,statusText:A.statusText,headers:(n=A.getAllResponseHeaders()||"",e=new u,n.replace(/\r?\n[\t ]+/g," ").split("\r").map((function(n){return 0===n.indexOf("\n")?n.substr(1,n.length):n})).forEach((function(n){var t=n.split(":"),r=t.shift().trim();if(r){var o=t.join(":").trim();e.append(r,o)}})),e)};t.url="responseURL"in A?A.responseURL:t.headers.get("X-Request-URL");var r="response"in A?A.response:A.responseText;setTimeout((function(){o(new y(r,t))}),0)},A.onerror=function(){setTimeout((function(){a(new TypeError("Network request failed"))}),0)},A.ontimeout=function(){setTimeout((function(){a(new TypeError("Network request failed"))}),0)},A.onabort=function(){setTimeout((function(){a(new b("Aborted","AbortError"))}),0)},A.open(s.method,function(e){try{return""===e&&n.location.href?n.location.href:e}catch(n){return e}}(s.url),!0),"include"===s.credentials?A.withCredentials=!0:"omit"===s.credentials&&(A.withCredentials=!1),"responseType"in A&&(r?A.responseType="blob":i&&s.headers.get("Content-Type")&&-1!==s.headers.get("Content-Type").indexOf("application/octet-stream")&&(A.responseType="arraybuffer")),!t||"object"!=typeof t.headers||t.headers instanceof u?s.headers.forEach((function(n,e){A.setRequestHeader(e,n)})):Object.getOwnPropertyNames(t.headers).forEach((function(n){A.setRequestHeader(n,l(t.headers[n]))})),s.signal&&(s.signal.addEventListener("abort",c),A.onreadystatechange=function(){4===A.readyState&&s.signal.removeEventListener("abort",c)}),A.send(void 0===s._bodyInit?null:s._bodyInit)}))}_.polyfill=!0,n.fetch||(n.fetch=_,n.Headers=u,n.Request=E,n.Response=y)})(),(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),s=t(565),A=t.n(s),l=t(216),c=t.n(l),u=t(589),p=t.n(u),d=t(756),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=c(),e()(d.Z,m),d.Z&&d.Z.locals&&d.Z.locals;document.querySelector(".find-user__form").addEventListener("submit",(function(n){n.preventDefault(),document.querySelector(".form__input--username").value.length>=1?function(){let n=document.querySelector(".form__input--username");fetch(`https://api.github.com/users/${n.value}/repos?page=1&per_page=1000`).then((n=>n.ok?n.json():Promise.reject(n))).then((e=>{n.value="",n.classList.remove("form__input--username-error"),function(n){const e=document.querySelector(".repositories__list"),t=document.querySelector(".list__element");e.innerHTML="",n.forEach((n=>{const r=t.cloneNode(!0);r.classList.remove("list__element--prototype"),r.querySelector(".element-repo-name__title").innerText=n.name,r.querySelector(".id__number").innerText=n.id,function(){const e=r.querySelector(".element-repo-desc__text");n.description?e.innerText=n.description:e.innerText="No description"}(),function(){const e=r.querySelector(".fa-circle"),t=r.querySelector(".element-repo-details__lang-text");"JavaScript"===n.language?(e.style.color="#f1e05a",t.innerText=n.language):"TypeScript"===n.language?(e.style.color="#2b7489",t.innerText=n.language):"HTML"===n.language?(e.style.color="#e44b23",t.innerText=n.language):"CSS"===n.language?(e.style.color="#563d7c",t.innerText=n.language):"PHP"===n.language?(e.style.color="#4F5D95",t.innerText=n.language):"Vue"===n.language?(e.style.color="#2c3e50",t.innerText=n.language):"Go"===n.language?(e.style.color="#375eab",t.innerText=n.language):"Swift"===n.language?(e.style.color="#ffac45",t.innerText=n.language):"Java"===n.language?(e.style.color="#b07219",t.innerText=n.language):"Rust"===n.language?(e.style.color="#dea584",t.innerText=n.language):"Python"===n.language?(e.style.color="#3572A5",t.innerText=n.language):null===n.language?(e.style.color="#b6b6b6",t.innerText="no data"):(e.style.color="#2b00d4",t.innerText=n.language)}(),function(){const e=r.querySelector(".element-repo-details__stars-text");n.stargazers_count?e.innerText=n.stargazers_count:e.innerText="0"}(),function(){const e=r.querySelector(".element-repo-details__forks-text");n.forks?e.innerText=n.forks:e.innerText="0"}(),e.appendChild(r)}))}(function(n){return n.sort(((n,e)=>e.stargazers_count-n.stargazers_count))}(e)),function(n){document.querySelector(".repositories__user").classList.add("repositories__user--active");const e=n;document.querySelector(".user__img").setAttribute("src",e)}(function(n){return n[0].owner.avatar_url}(e)),function(n){const e=n[0].owner.login;document.querySelector(".user__name").innerText=`@${e}`}(e)})).catch((e=>{n.value="",n.classList.add("form__input--username-error"),window.location.reload(!0)}))}():window.location.reload(!0)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RixFQUF1QnBPLE1BQU11TyxNQUFRLFVBQzdCRixFQUFpQkwsVUFBWXJTLEVBQUsyUyxVQUV0QixlQUFsQjNTLEVBQUsyUyxVQUNQRixFQUF1QnBPLE1BQU11TyxNQUFRLFVBQzdCRixFQUFpQkwsVUFBWXJTLEVBQUsyUyxVQUV0QixTQUFsQjNTLEVBQUsyUyxVQUNQRixFQUF1QnBPLE1BQU11TyxNQUFRLFVBQzdCRixFQUFpQkwsVUFBWXJTLEVBQUsyUyxVQUV0QixRQUFsQjNTLEVBQUsyUyxVQUNQRixFQUF1QnBPLE1BQU11TyxNQUFRLFVBQzdCRixFQUFpQkwsVUFBWXJTLEVBQUsyUyxVQUV0QixRQUFsQjNTLEVBQUsyUyxVQUNQRixFQUF1QnBPLE1BQU11TyxNQUFRLFVBQzdCRixFQUFpQkwsVUFBWXJTLEVBQUsyUyxVQUV0QixRQUFsQjNTLEVBQUsyUyxVQUNQRixFQUF1QnBPLE1BQU11TyxNQUFRLFVBQzdCRixFQUFpQkwsVUFBWXJTLEVBQUsyUyxVQUV0QixPQUFsQjNTLEVBQUsyUyxVQUNQRixFQUF1QnBPLE1BQU11TyxNQUFRLFVBQzdCRixFQUFpQkwsVUFBWXJTLEVBQUsyUyxVQUV0QixVQUFsQjNTLEVBQUsyUyxVQUNQRixFQUF1QnBPLE1BQU11TyxNQUFRLFVBQzdCRixFQUFpQkwsVUFBWXJTLEVBQUsyUyxVQUV0QixTQUFsQjNTLEVBQUsyUyxVQUNQRixFQUF1QnBPLE1BQU11TyxNQUFRLFVBQzdCRixFQUFpQkwsVUFBWXJTLEVBQUsyUyxVQUV0QixTQUFsQjNTLEVBQUsyUyxVQUNQRixFQUF1QnBPLE1BQU11TyxNQUFRLFVBQzdCRixFQUFpQkwsVUFBWXJTLEVBQUsyUyxVQUV0QixXQUFsQjNTLEVBQUsyUyxVQUNQRixFQUF1QnBPLE1BQU11TyxNQUFRLFVBQzdCRixFQUFpQkwsVUFBWXJTLEVBQUsyUyxVQUV0QixPQUFsQjNTLEVBQUsyUyxVQUNQRixFQUF1QnBPLE1BQU11TyxNQUFRLFVBQzdCRixFQUFpQkwsVUFBWSxZQUVyQ0ksRUFBdUJwTyxNQUFNdU8sTUFBUSxVQUM3QkYsRUFBaUJMLFVBQVlyUyxFQUFLMlMsVUFHOUNFLEdBRUEsV0FDRSxNQUFNQyxFQUFvQlgsRUFBc0IxTixjQUM5QyxxQ0FFRXpFLEVBQUsrUyxpQkFDQ0QsRUFBa0JULFVBQVlyUyxFQUFLK1MsaUJBRW5DRCxFQUFrQlQsVUFBYSxJQUczQ1csR0FFQSxXQUNFLE1BQU1DLEVBQW9CZCxFQUFzQjFOLGNBQzlDLHFDQUVFekUsRUFBS2tULE1BQ0NELEVBQWtCWixVQUFZclMsRUFBS2tULE1BRW5DRCxFQUFrQlosVUFBYSxJQUczQ2MsR0FFQW5CLEVBQVUvTSxZQUFZa04sTUFwSXBCaUIsQ0FsQkosU0FBb0JwUixHQUNsQixPQUFPQSxFQUFLcVIsTUFBSyxDQUFDek0sRUFBR3VCLElBQU1BLEVBQUU0SyxpQkFBbUJuTSxFQUFFbU0sbUJBaUJoQ08sQ0FBV3RSLElBNklqQyxTQUF3QnVSLEdBSk0vTyxTQUFTQyxjQUFjLHVCQUN4QnFOLFVBQVUwQixJQUFJLDhCQU16QyxNQUFNQyxFQUFZRixFQUNDL08sU0FDaEJDLGNBQWMsY0FDZGUsYUFBYSxNQUFPaU8sR0FsSm5CQyxDQWZKLFNBQW9CMVIsR0FDbEIsT0FBT0EsRUFBSyxHQUFMLGlCQWNVMlIsQ0FBVzNSLElBcUpoQyxTQUFzQjRSLEdBQ3BCLE1BQU1DLEVBQVFELEVBQWdCLEdBQWhCLFlBQ0lwUCxTQUFTQyxjQUN6QixlQUNBNE4sVUFBYSxJQUFHd0IsSUF4SmRDLENBQWE5UixNQUVkK1IsT0FBT3RFLElBQ05tQyxFQUFjdkksTUFBUSxHQUN0QnVJLEVBQWNFLFVBQVUwQixJQUFJLCtCQUM1QjlPLE9BQU9tRCxTQUFTbU0sUUFBTyxNQWxDekJDLEdBRUF2UCxPQUFPbUQsU0FBU21NLFFBQU8sTyIsInNvdXJjZXMiOlsid2VicGFjazovL3Rhc2stZXhjdXNpb25zLWFwaS8uL3NyYy9zdHlsZXMvZm9ybS5jc3MiLCJ3ZWJwYWNrOi8vdGFzay1leGN1c2lvbnMtYXBpLy4vc3JjL3N0eWxlcy9tYWluLmNzcyIsIndlYnBhY2s6Ly90YXNrLWV4Y3VzaW9ucy1hcGkvLi9zcmMvc3R5bGVzL3JlcG8uY3NzIiwid2VicGFjazovL3Rhc2stZXhjdXNpb25zLWFwaS8uL3NyYy9zdHlsZXMvdG9wLmNzcyIsIndlYnBhY2s6Ly90YXNrLWV4Y3VzaW9ucy1hcGkvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3Rhc2stZXhjdXNpb25zLWFwaS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanMiLCJ3ZWJwYWNrOi8vdGFzay1leGN1c2lvbnMtYXBpLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdGFzay1leGN1c2lvbnMtYXBpLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3Rhc2stZXhjdXNpb25zLWFwaS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdGFzay1leGN1c2lvbnMtYXBpLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3Rhc2stZXhjdXNpb25zLWFwaS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90YXNrLWV4Y3VzaW9ucy1hcGkvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90YXNrLWV4Y3VzaW9ucy1hcGkvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90YXNrLWV4Y3VzaW9ucy1hcGkvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdGFzay1leGN1c2lvbnMtYXBpL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3Rhc2stZXhjdXNpb25zLWFwaS93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdGFzay1leGN1c2lvbnMtYXBpL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vdGFzay1leGN1c2lvbnMtYXBpL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdGFzay1leGN1c2lvbnMtYXBpL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3Rhc2stZXhjdXNpb25zLWFwaS93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly90YXNrLWV4Y3VzaW9ucy1hcGkvLi9ub2RlX21vZHVsZXMvd2hhdHdnLWZldGNoL2ZldGNoLmpzIiwid2VicGFjazovL3Rhc2stZXhjdXNpb25zLWFwaS8uL3NyYy9zdHlsZXMvbWFpbi5jc3M/ZTgwYSIsIndlYnBhY2s6Ly90YXNrLWV4Y3VzaW9ucy1hcGkvLi9zcmMvanMvYXBwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLm1haW5fX2ZpbmQtdXNlciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBtYXJnaW46IDJyZW0gMDtcXG4gIHdpZHRoOiA5MCU7XFxufVxcblxcbi5tYWluX19mb3JtLWluc3RydWN0aW9uIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgLyogYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxcbiAgICAzNDVkZWcsXFxuICAgIHZhcigtLXB1cnBsZUVsZW1lbnRzQ29sb3IpIDAlLFxcbiAgICB2YXIoLS1wdXJwbGVFbGVtZW50c0NvbG9ySG92ZXIpIDMwJSxcXG4gICAgdmFyKC0tcHVycGxlRWxlbWVudHNDb2xvckhvdmVyKSA1MCUsXFxuICAgIHZhcigtLXB1cnBsZUVsZW1lbnRzQ29sb3JIb3ZlcikgNzAlLFxcbiAgICB2YXIoLS1wdXJwbGVFbGVtZW50c0NvbG9yKSAxMDAlXFxuICApO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHVycGxlRWxlbWVudHNDb2xvcik7ICovXFxuXFxuICBib3JkZXI6IDNweCBzb2xpZCB2YXIoLS1idXR0b25HcmV5Q29sb3IpO1xcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gIG1hcmdpbi10b3A6IDJyZW07XFxuICBwYWRkaW5nOiAycmVtIDJyZW07XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICB3aWR0aDogOTAlO1xcbn1cXG5cXG4uZmEtc2VhcmNoIHtcXG4gIGZvbnQtc2l6ZTogMmVtO1xcbiAgY29sb3I6IHZhcigtLXB1cnBsZUVsZW1lbnRzQ29sb3IpO1xcbn1cXG5cXG4uZm9ybS1pbnN0cnVjdGlvbl9fdGV4dCB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBmb250LXNpemU6IDEuM3JlbTtcXG4gIGNvbG9yOiB2YXIoLS1wdXJwbGVFbGVtZW50c0NvbG9yKTtcXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XFxufVxcblxcbi5maW5kLXVzZXJfX2Zvcm0ge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA4MCUgMjAlO1xcbn1cXG5cXG4uZm9ybV9faW5wdXQge1xcbiAgZm9udC1mYW1pbHk6IFxcXCJQb3BwaW5zXFxcIiwgc2Fucy1zZXJpZjtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xcbiAgY29sb3I6IHZhcigtLWRhcmtGb250Q29sb3IpO1xcbn1cXG5cXG4uZm9ybV9faW5wdXQtLXVzZXJuYW1lIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWZvbnRHcmV5Q29sb3IpO1xcbiAgYm9yZGVyLXJhZGl1czogNnB4IDAgMCA2cHg7XFxuICBwYWRkaW5nOiAwLjc1cmVtIDFyZW07XFxuICB3aWR0aDogMTAwJTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW5CZ2MpO1xcbn1cXG5cXG4uZm9ybV9faW5wdXQtLXVzZXJuYW1lOjpwbGFjZWhvbGRlciB7XFxuICBjb2xvcjogdmFyKC0tZm9udEdyZXlDb2xvcik7XFxufVxcblxcbi5mb3JtX19pbnB1dC0tdXNlcm5hbWU6Zm9jdXMge1xcbiAgb3V0bGluZTogMnB4IHNvbGlkIHZhcigtLXB1cnBsZUVsZW1lbnRzQ29sb3IpO1xcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XFxufVxcblxcbi5mb3JtX19pbnB1dC0tc3VibWl0IHtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJvcmRlci1yYWRpdXM6IDAgNnB4IDZweCAwO1xcbiAgLyogYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHVycGxlRWxlbWVudHNDb2xvcik7ICovXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1mb250R3JleUNvbG9yKTtcXG4gIGxldHRlci1zcGFjaW5nOiAwLjA1cmVtO1xcbiAgY29sb3I6IHZhcigtLXdoaXRlQ29sb3IpO1xcbiAgcGFkZGluZzogMC41cmVtIDEuNHJlbTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcXG4gIHRyYW5zaXRpb246IDAuMTVzIGVhc2UtaW4tb3V0O1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcbn1cXG5cXG4uZm9ybV9faW5wdXQtLXN1Ym1pdDpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wdXJwbGVFbGVtZW50c0NvbG9ySG92ZXIpO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcXG4gIC5tYWluX19maW5kLXVzZXIge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gIH1cXG5cXG4gIC5tYWluX19mb3JtLWluc3RydWN0aW9uIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICB9XFxuXFxuICAuZm9ybV9faW5wdXQge1xcbiAgICBmb250LXNpemU6IDEuNHJlbTtcXG4gIH1cXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9mb3JtLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsY0FBYztFQUNkLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkI7Ozs7Ozs7O2lEQVErQzs7RUFFL0Msd0NBQXdDO0VBQ3hDLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsVUFBVTtBQUNaOztBQUVBO0VBQ0UsY0FBYztFQUNkLGlDQUFpQztBQUNuQzs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsaUNBQWlDO0VBQ2pDLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0Usa0NBQWtDO0VBQ2xDLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0Usc0NBQXNDO0VBQ3RDLDBCQUEwQjtFQUMxQixxQkFBcUI7RUFDckIsV0FBVztFQUNYLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLDZDQUE2QztFQUM3QyxvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osMEJBQTBCO0VBQzFCLGtEQUFrRDtFQUNsRCxzQ0FBc0M7RUFDdEMsdUJBQXVCO0VBQ3ZCLHdCQUF3QjtFQUN4QixzQkFBc0I7RUFDdEIsV0FBVztFQUNYLCtCQUErQjtFQUMvQiw2QkFBNkI7RUFDN0Isd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0UsaURBQWlEO0VBQ2pELGVBQWU7QUFDakI7O0FBRUE7RUFDRTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5tYWluX19maW5kLXVzZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgbWFyZ2luOiAycmVtIDA7XFxuICB3aWR0aDogOTAlO1xcbn1cXG5cXG4ubWFpbl9fZm9ybS1pbnN0cnVjdGlvbiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIC8qIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcXG4gICAgMzQ1ZGVnLFxcbiAgICB2YXIoLS1wdXJwbGVFbGVtZW50c0NvbG9yKSAwJSxcXG4gICAgdmFyKC0tcHVycGxlRWxlbWVudHNDb2xvckhvdmVyKSAzMCUsXFxuICAgIHZhcigtLXB1cnBsZUVsZW1lbnRzQ29sb3JIb3ZlcikgNTAlLFxcbiAgICB2YXIoLS1wdXJwbGVFbGVtZW50c0NvbG9ySG92ZXIpIDcwJSxcXG4gICAgdmFyKC0tcHVycGxlRWxlbWVudHNDb2xvcikgMTAwJVxcbiAgKTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXB1cnBsZUVsZW1lbnRzQ29sb3IpOyAqL1xcblxcbiAgYm9yZGVyOiAzcHggc29saWQgdmFyKC0tYnV0dG9uR3JleUNvbG9yKTtcXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICBtYXJnaW4tdG9wOiAycmVtO1xcbiAgcGFkZGluZzogMnJlbSAycmVtO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgd2lkdGg6IDkwJTtcXG59XFxuXFxuLmZhLXNlYXJjaCB7XFxuICBmb250LXNpemU6IDJlbTtcXG4gIGNvbG9yOiB2YXIoLS1wdXJwbGVFbGVtZW50c0NvbG9yKTtcXG59XFxuXFxuLmZvcm0taW5zdHJ1Y3Rpb25fX3RleHQge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgZm9udC1zaXplOiAxLjNyZW07XFxuICBjb2xvcjogdmFyKC0tcHVycGxlRWxlbWVudHNDb2xvcik7XFxuICBmb250LXdlaWdodDogNTAwO1xcbn1cXG5cXG4uZmluZC11c2VyX19mb3JtIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogODAlIDIwJTtcXG59XFxuXFxuLmZvcm1fX2lucHV0IHtcXG4gIGZvbnQtZmFtaWx5OiBcXFwiUG9wcGluc1xcXCIsIHNhbnMtc2VyaWY7XFxuICBib3JkZXI6IG5vbmU7XFxuICBmb250LXNpemU6IDEuM3JlbTtcXG4gIGNvbG9yOiB2YXIoLS1kYXJrRm9udENvbG9yKTtcXG59XFxuXFxuLmZvcm1fX2lucHV0LS11c2VybmFtZSB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1mb250R3JleUNvbG9yKTtcXG4gIGJvcmRlci1yYWRpdXM6IDZweCAwIDAgNnB4O1xcbiAgcGFkZGluZzogMC43NXJlbSAxcmVtO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYWluQmdjKTtcXG59XFxuXFxuLmZvcm1fX2lucHV0LS11c2VybmFtZTo6cGxhY2Vob2xkZXIge1xcbiAgY29sb3I6IHZhcigtLWZvbnRHcmV5Q29sb3IpO1xcbn1cXG5cXG4uZm9ybV9faW5wdXQtLXVzZXJuYW1lOmZvY3VzIHtcXG4gIG91dGxpbmU6IDJweCBzb2xpZCB2YXIoLS1wdXJwbGVFbGVtZW50c0NvbG9yKTtcXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xcbn1cXG5cXG4uZm9ybV9faW5wdXQtLXN1Ym1pdCB7XFxuICBib3JkZXI6IG5vbmU7XFxuICBib3JkZXItcmFkaXVzOiAwIDZweCA2cHggMDtcXG4gIC8qIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXB1cnBsZUVsZW1lbnRzQ29sb3IpOyAqL1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZm9udEdyZXlDb2xvcik7XFxuICBsZXR0ZXItc3BhY2luZzogMC4wNXJlbTtcXG4gIGNvbG9yOiB2YXIoLS13aGl0ZUNvbG9yKTtcXG4gIHBhZGRpbmc6IDAuNXJlbSAxLjRyZW07XFxuICB3aWR0aDogMTAwJTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XFxuICB0cmFuc2l0aW9uOiAwLjE1cyBlYXNlLWluLW91dDtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG59XFxuXFxuLmZvcm1fX2lucHV0LS1zdWJtaXQ6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHVycGxlRWxlbWVudHNDb2xvckhvdmVyKTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAubWFpbl9fZmluZC11c2VyIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICB9XFxuXFxuICAubWFpbl9fZm9ybS1pbnN0cnVjdGlvbiB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVxcblxcbiAgLmZvcm1fX2lucHV0IHtcXG4gICAgZm9udC1zaXplOiAxLjRyZW07XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzBfX18gZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi90b3AuY3NzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8xX19fIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZm9ybS5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzJfX18gZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9yZXBvLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuLi9hc3NldHMvYmdfMS5zdmdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyA9IG5ldyBVUkwoXCIuLi9hc3NldHMvYmdfMi5zdmdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8xX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8yX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3Qge1xcbiAgLS1ibGFja0NvbG9yOiAjMDAwMDAwO1xcbiAgLS1ibHVlRWxlbWVudHNDb2xvcjogIzE5ZGJmZTtcXG4gIC0tYnV0dG9uR3JleUNvbG9yOiAjZjJmMmYyO1xcbiAgLS1kYXJrRm9udENvbG9yOiAjMzMzMzMzO1xcbiAgLS1mb250R3JleUNvbG9yOiAjYjZiNmI2O1xcbiAgLS1mb250RGVzY3JpcHRpb25Db2xvcjogIzllOWU5ZTtcXG4gIC0tbWFpbkJnYzogI2ZjZmNmYztcXG4gIC0tcHVycGxlRWxlbWVudHNDb2xvcjogIzJiMDBkNDtcXG4gIC0tcHVycGxlRWxlbWVudHNDb2xvckhvdmVyOiAjNzI1NGVjO1xcbiAgLS13aGl0ZUNvbG9yOiAjZmZmZmZmO1xcbiAgLS1zdGFyQ29sb3I6ICNmZmQ3MDA7XFxuICAtLWpzQ29sb3I6ICNlZmQ4MWQ7XFxuICAtLWVycm9yQm9yZGVyOiAjZmYwMDMzO1xcbn1cXG5cXG4qIHtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG5odG1sIHtcXG4gIGZvbnQtZmFtaWx5OiBcXFwiUG9wcGluc1xcXCIsIHNhbnMtc2VyaWY7XFxuICBmb250LXNpemU6IDEwcHg7XFxufVxcblxcbmJvZHkge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYWluQmdjKTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLndyYXBwZXIge1xcbiAgd2lkdGg6IDkwdnc7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5tYWluIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgbWF4LXdpZHRoOiA2MDBweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAud3JhcHBlciB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVxcbiAgLndyYXBwZXI6OmJlZm9yZSB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIGNvbnRlbnQ6IFxcXCIgXFxcIjtcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKTtcXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBvcGFjaXR5OiAwLjA3O1xcbiAgICB6LWluZGV4OiAtMTtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAtMjBweDtcXG4gIH1cXG5cXG4gIC53cmFwcGVyOjphZnRlciB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIGNvbnRlbnQ6IFxcXCIgXFxcIjtcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyArIFwiKTtcXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBvcGFjaXR5OiAwLjA1O1xcbiAgICB6LWluZGV4OiAtMTtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAwO1xcbiAgfVxcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL21haW4uY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUlBO0VBQ0UscUJBQXFCO0VBQ3JCLDRCQUE0QjtFQUM1QiwwQkFBMEI7RUFDMUIsd0JBQXdCO0VBQ3hCLHdCQUF3QjtFQUN4QiwrQkFBK0I7RUFDL0Isa0JBQWtCO0VBQ2xCLDhCQUE4QjtFQUM5QixtQ0FBbUM7RUFDbkMscUJBQXFCO0VBQ3JCLG9CQUFvQjtFQUNwQixrQkFBa0I7RUFDbEIsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsU0FBUztFQUNULFVBQVU7RUFDVixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxrQ0FBa0M7RUFDbEMsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxnQ0FBZ0M7RUFDaEMsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFO0lBQ0UsV0FBVztFQUNiO0VBQ0E7SUFDRSxXQUFXO0lBQ1gsWUFBWTtJQUNaLFlBQVk7SUFDWix5REFBeUM7SUFDekMsNEJBQTRCO0lBQzVCLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsV0FBVztJQUNYLE9BQU87SUFDUCxVQUFVO0VBQ1o7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsWUFBWTtJQUNaLFlBQVk7SUFDWix5REFBeUM7SUFDekMsNEJBQTRCO0lBQzVCLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsV0FBVztJQUNYLE9BQU87SUFDUCxNQUFNO0VBQ1I7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IFxcXCIuL3RvcC5jc3NcXFwiO1xcbkBpbXBvcnQgXFxcIi4vZm9ybS5jc3NcXFwiO1xcbkBpbXBvcnQgXFxcIi4vcmVwby5jc3NcXFwiO1xcblxcbjpyb290IHtcXG4gIC0tYmxhY2tDb2xvcjogIzAwMDAwMDtcXG4gIC0tYmx1ZUVsZW1lbnRzQ29sb3I6ICMxOWRiZmU7XFxuICAtLWJ1dHRvbkdyZXlDb2xvcjogI2YyZjJmMjtcXG4gIC0tZGFya0ZvbnRDb2xvcjogIzMzMzMzMztcXG4gIC0tZm9udEdyZXlDb2xvcjogI2I2YjZiNjtcXG4gIC0tZm9udERlc2NyaXB0aW9uQ29sb3I6ICM5ZTllOWU7XFxuICAtLW1haW5CZ2M6ICNmY2ZjZmM7XFxuICAtLXB1cnBsZUVsZW1lbnRzQ29sb3I6ICMyYjAwZDQ7XFxuICAtLXB1cnBsZUVsZW1lbnRzQ29sb3JIb3ZlcjogIzcyNTRlYztcXG4gIC0td2hpdGVDb2xvcjogI2ZmZmZmZjtcXG4gIC0tc3RhckNvbG9yOiAjZmZkNzAwO1xcbiAgLS1qc0NvbG9yOiAjZWZkODFkO1xcbiAgLS1lcnJvckJvcmRlcjogI2ZmMDAzMztcXG59XFxuXFxuKiB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuaHRtbCB7XFxuICBmb250LWZhbWlseTogXFxcIlBvcHBpbnNcXFwiLCBzYW5zLXNlcmlmO1xcbiAgZm9udC1zaXplOiAxMHB4O1xcbn1cXG5cXG5ib2R5IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWFpbkJnYyk7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi53cmFwcGVyIHtcXG4gIHdpZHRoOiA5MHZ3O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4ubWFpbiB7XFxuICB3aWR0aDogMTAwJTtcXG4gIG1heC13aWR0aDogNjAwcHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xcbiAgLndyYXBwZXIge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gIH1cXG4gIC53cmFwcGVyOjpiZWZvcmUge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICBjb250ZW50OiBcXFwiIFxcXCI7XFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9hc3NldHMvYmdfMS5zdmcpO1xcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIG9wYWNpdHk6IDAuMDc7XFxuICAgIHotaW5kZXg6IC0xO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IC0yMHB4O1xcbiAgfVxcblxcbiAgLndyYXBwZXI6OmFmdGVyIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgY29udGVudDogXFxcIiBcXFwiO1xcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vYXNzZXRzL2JnXzIuc3ZnKTtcXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBvcGFjaXR5OiAwLjA1O1xcbiAgICB6LWluZGV4OiAtMTtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAwO1xcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIubWFpbl9fcmVwb3NpdG9yaWVzLFxcbi5yZXBvc2l0b3JpZXNfX3VzZXIsXFxuLnVzZXJfX3BpY3R1cmUge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgY29sb3I6IHZhcigtLWRhcmtGb250Q29sb3IpO1xcbn1cXG5cXG4ucmVwb3NpdG9yaWVzX19sb2FkaW5nLS1hY3RpdmUge1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLnJlcG9zaXRvcmllc19fdXNlciB7XFxuICBkaXNwbGF5OiBub25lO1xcbiAgbWFyZ2luLXRvcDogMnJlbTtcXG59XFxuXFxuLnJlcG9zaXRvcmllc19fdXNlci0tYWN0aXZlIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi51c2VyX19uYW1lIHtcXG4gIG1hcmdpbjogMC41cmVtIDAgMS41cmVtIDA7XFxuICBjb2xvcjogdmFyKC0tZm9udEdyZXlDb2xvcik7XFxufVxcblxcbi51c2VyX19pbWcge1xcbiAgd2lkdGg6IDUwJTtcXG4gIG1heC13aWR0aDogNDAwcHg7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxufVxcblxcbi5yZXBvc2l0b3JpZXNfX2xpc3Qge1xcbiAgd2lkdGg6IDkwJTtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxufVxcblxcbi5saXN0X19lbGVtZW50IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYnV0dG9uR3JleUNvbG9yKTtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIHBhZGRpbmc6IDFyZW07XFxuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xcbn1cXG5cXG4uZWxlbWVudC1yZXBvLW5hbWVfX3RpdGxlIHtcXG4gIGZvbnQtc2l6ZTogMS44cmVtO1xcbiAgbWFyZ2luLWJvdHRvbTogMC4zcmVtO1xcbiAgY29sb3I6IHZhcigtLXB1cnBsZUVsZW1lbnRzQ29sb3IpO1xcbn1cXG5cXG4uZWxlbWVudC1yZXBvLW5hbWVfX2lkIHtcXG4gIGZvbnQtc2l6ZTogMS4xcmVtO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIGNvbG9yOiB2YXIoLS1mb250R3JleUNvbG9yKTtcXG59XFxuXFxuLmxpc3RfX2VsZW1lbnQtcmVwby1kZXNjIHtcXG4gIG1hcmdpbjogMXJlbSAwO1xcbn1cXG5cXG4uZWxlbWVudC1yZXBvLWRlc2NfX3RleHQge1xcbiAgY29sb3I6IHZhcigtLWZvbnREZXNjcmlwdGlvbkNvbG9yKTtcXG4gIGZvbnQtc2l6ZTogMS4xNXJlbTtcXG59XFxuXFxuLmxpc3RfX2VsZW1lbnQtcmVwby1kZXRhaWxzIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBmb250LXNpemU6IDEuMnJlbTtcXG4gIG1hcmdpbi10b3A6IDFyZW07XFxufVxcblxcbi5mYXMge1xcbiAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XFxufVxcblxcbi5mYS1jaXJjbGUge1xcbiAgZm9udC1zaXplOiAwLjhlbTtcXG4gIGNvbG9yOiB2YXIoLS1qc0NvbG9yKTtcXG59XFxuXFxuLmZhLXN0YXIge1xcbiAgY29sb3I6IHZhcigtLXN0YXJDb2xvcik7XFxufVxcblxcbi8qIHByb3RvdHlwZSAqL1xcblxcbi5saXN0X19lbGVtZW50LS1wcm90b3R5cGUge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAucmVwb3NpdG9yaWVzX191c2VyIHtcXG4gICAgbWFyZ2luLXRvcDogM3JlbTtcXG4gIH1cXG4gIC51c2VyX19uYW1lIHtcXG4gICAgbWFyZ2luOiAxcmVtIDAgM3JlbSAwO1xcbiAgfVxcblxcbiAgLnJlcG9zaXRvcmllc19fbGlzdCB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVxcblxcbiAgLmxpc3RfX2VsZW1lbnQge1xcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xcbiAgICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XFxuICB9XFxuXFxuICAubGlzdF9fZWxlbWVudC1yZXBvLW5hbWUge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICB9XFxuXFxuICAuZWxlbWVudC1yZXBvLW5hbWVfX3RpdGxlIHtcXG4gICAgd2lkdGg6IDg1JTtcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxuICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XFxuICB9XFxuXFxuICAubGlzdF9fZWxlbWVudC1yZXBvLWRlc2Mge1xcbiAgICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XFxuICB9XFxuXFxuICAuZWxlbWVudC1yZXBvLWRlc2NfX3RleHQge1xcbiAgICBjb2xvcjogdmFyKC0tZm9udERlc2NyaXB0aW9uQ29sb3IpO1xcbiAgICBmb250LXNpemU6IDEuM3JlbTtcXG4gIH1cXG5cXG4gIC5saXN0X19lbGVtZW50LXJlcG8tZGV0YWlscyB7XFxuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xcbiAgfVxcblxcbiAgLmxpc3RfX2VsZW1lbnQtcmVwby1kZXRhaWxzIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBjYWxjKDEwMCUgLyAzKSBjYWxjKDEwMCUgLyAzKSBjYWxjKDEwMCUgLyAzKTtcXG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xcbiAgICBmb250LXNpemU6IDEuM3JlbTtcXG4gIH1cXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9yZXBvLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTs7O0VBR0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QiwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFVBQVU7RUFDVixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsd0NBQXdDO0VBQ3hDLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLHFCQUFxQjtFQUNyQixpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxrQ0FBa0M7RUFDbEMsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHVCQUF1QjtBQUN6Qjs7QUFFQSxjQUFjOztBQUVkO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0U7SUFDRSxnQkFBZ0I7RUFDbEI7RUFDQTtJQUNFLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixxQkFBcUI7RUFDdkI7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDhCQUE4QjtFQUNoQzs7RUFFQTtJQUNFLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIsdUJBQXVCO0lBQ3ZCLGlCQUFpQjtJQUNqQixxQkFBcUI7RUFDdkI7O0VBRUE7SUFDRSxxQkFBcUI7RUFDdkI7O0VBRUE7SUFDRSxrQ0FBa0M7SUFDbEMsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UsYUFBYTtJQUNiLG1FQUFtRTtJQUNuRSxxQkFBcUI7SUFDckIsaUJBQWlCO0VBQ25CO0FBQ0ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLm1haW5fX3JlcG9zaXRvcmllcyxcXG4ucmVwb3NpdG9yaWVzX191c2VyLFxcbi51c2VyX19waWN0dXJlIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGNvbG9yOiB2YXIoLS1kYXJrRm9udENvbG9yKTtcXG59XFxuXFxuLnJlcG9zaXRvcmllc19fbG9hZGluZy0tYWN0aXZlIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5yZXBvc2l0b3JpZXNfX3VzZXIge1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIG1hcmdpbi10b3A6IDJyZW07XFxufVxcblxcbi5yZXBvc2l0b3JpZXNfX3VzZXItLWFjdGl2ZSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4udXNlcl9fbmFtZSB7XFxuICBtYXJnaW46IDAuNXJlbSAwIDEuNXJlbSAwO1xcbiAgY29sb3I6IHZhcigtLWZvbnRHcmV5Q29sb3IpO1xcbn1cXG5cXG4udXNlcl9faW1nIHtcXG4gIHdpZHRoOiA1MCU7XFxuICBtYXgtd2lkdGg6IDQwMHB4O1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbn1cXG5cXG4ucmVwb3NpdG9yaWVzX19saXN0IHtcXG4gIHdpZHRoOiA5MCU7XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbn1cXG5cXG4ubGlzdF9fZWxlbWVudCB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJ1dHRvbkdyZXlDb2xvcik7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBwYWRkaW5nOiAxcmVtO1xcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcXG59XFxuXFxuLmVsZW1lbnQtcmVwby1uYW1lX190aXRsZSB7XFxuICBmb250LXNpemU6IDEuOHJlbTtcXG4gIG1hcmdpbi1ib3R0b206IDAuM3JlbTtcXG4gIGNvbG9yOiB2YXIoLS1wdXJwbGVFbGVtZW50c0NvbG9yKTtcXG59XFxuXFxuLmVsZW1lbnQtcmVwby1uYW1lX19pZCB7XFxuICBmb250LXNpemU6IDEuMXJlbTtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBjb2xvcjogdmFyKC0tZm9udEdyZXlDb2xvcik7XFxufVxcblxcbi5saXN0X19lbGVtZW50LXJlcG8tZGVzYyB7XFxuICBtYXJnaW46IDFyZW0gMDtcXG59XFxuXFxuLmVsZW1lbnQtcmVwby1kZXNjX190ZXh0IHtcXG4gIGNvbG9yOiB2YXIoLS1mb250RGVzY3JpcHRpb25Db2xvcik7XFxuICBmb250LXNpemU6IDEuMTVyZW07XFxufVxcblxcbi5saXN0X19lbGVtZW50LXJlcG8tZGV0YWlscyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgZm9udC1zaXplOiAxLjJyZW07XFxuICBtYXJnaW4tdG9wOiAxcmVtO1xcbn1cXG5cXG4uZmFzIHtcXG4gIG1hcmdpbi1yaWdodDogMC41cmVtO1xcbn1cXG5cXG4uZmEtY2lyY2xlIHtcXG4gIGZvbnQtc2l6ZTogMC44ZW07XFxuICBjb2xvcjogdmFyKC0tanNDb2xvcik7XFxufVxcblxcbi5mYS1zdGFyIHtcXG4gIGNvbG9yOiB2YXIoLS1zdGFyQ29sb3IpO1xcbn1cXG5cXG4vKiBwcm90b3R5cGUgKi9cXG5cXG4ubGlzdF9fZWxlbWVudC0tcHJvdG90eXBlIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xcbiAgLnJlcG9zaXRvcmllc19fdXNlciB7XFxuICAgIG1hcmdpbi10b3A6IDNyZW07XFxuICB9XFxuICAudXNlcl9fbmFtZSB7XFxuICAgIG1hcmdpbjogMXJlbSAwIDNyZW0gMDtcXG4gIH1cXG5cXG4gIC5yZXBvc2l0b3JpZXNfX2xpc3Qge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gIH1cXG5cXG4gIC5saXN0X19lbGVtZW50IHtcXG4gICAgbWF4LXdpZHRoOiA2MDBweDtcXG4gICAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xcbiAgfVxcblxcbiAgLmxpc3RfX2VsZW1lbnQtcmVwby1uYW1lIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgfVxcblxcbiAgLmVsZW1lbnQtcmVwby1uYW1lX190aXRsZSB7XFxuICAgIHdpZHRoOiA4NSU7XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgICBmb250LXNpemU6IDIuM3JlbTtcXG4gICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xcbiAgfVxcblxcbiAgLmxpc3RfX2VsZW1lbnQtcmVwby1kZXNjIHtcXG4gICAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xcbiAgfVxcblxcbiAgLmVsZW1lbnQtcmVwby1kZXNjX190ZXh0IHtcXG4gICAgY29sb3I6IHZhcigtLWZvbnREZXNjcmlwdGlvbkNvbG9yKTtcXG4gICAgZm9udC1zaXplOiAxLjNyZW07XFxuICB9XFxuXFxuICAubGlzdF9fZWxlbWVudC1yZXBvLWRldGFpbHMge1xcbiAgICBmb250LXNpemU6IDEuM3JlbTtcXG4gIH1cXG5cXG4gIC5saXN0X19lbGVtZW50LXJlcG8tZGV0YWlscyB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogY2FsYygxMDAlIC8gMykgY2FsYygxMDAlIC8gMykgY2FsYygxMDAlIC8gMyk7XFxuICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcXG4gICAgZm9udC1zaXplOiAxLjNyZW07XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5oZWFkZXIge1xcbiAgbWFyZ2luOiAzcmVtIDAgMnJlbSAwO1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxLjNzO1xcbiAgYW5pbWF0aW9uLW5hbWU6IGhlYWRlck9wZW5pbmc7XFxuICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xcbn1cXG5cXG4uaGVhZGVyX190aXRsZSB7XFxuICBmb250LXNpemU6IDNyZW07XFxuICBjb2xvcjogdmFyKC0tcHVycGxlRWxlbWVudHNDb2xvcik7XFxufVxcblxcbi5oZWFkZXJfX3RpdGxlLS1jb2xvciB7XFxuICBjb2xvcjogdmFyKC0tYmx1ZUVsZW1lbnRzQ29sb3IpO1xcbn1cXG5cXG4uaGVhZGVyX190aXRsZSxcXG4uaGVhZGVyX190aXRsZS0tY29sb3Ige1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG59XFxuXFxuLmZhLWdpdGh1YiB7XFxuICBmb250LXNpemU6IDAuNzVlbTtcXG4gIG1hcmdpbi1sZWZ0OiAwLjA1ZW07XFxufVxcblxcbkBrZXlmcmFtZXMgaGVhZGVyT3BlbmluZyB7XFxuICBmcm9tIHtcXG4gICAgb3BhY2l0eTogMDtcXG4gIH1cXG5cXG4gIHRvIHtcXG4gICAgb3BhY2l0eTogMTtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAuaGVhZGVyIHtcXG4gICAgbWFyZ2luLXRvcDogMTByZW07XFxuICB9XFxuXFxuICAuaGVhZGVyX190aXRsZSB7XFxuICAgIGZvbnQtc2l6ZTogNHJlbTtcXG4gIH1cXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy90b3AuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UscUJBQXFCO0VBQ3JCLHdCQUF3QjtFQUN4Qiw2QkFBNkI7RUFDN0IsNEJBQTRCO0FBQzlCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGlDQUFpQztBQUNuQzs7QUFFQTtFQUNFLCtCQUErQjtBQUNqQzs7QUFFQTs7RUFFRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0U7SUFDRSxVQUFVO0VBQ1o7O0VBRUE7SUFDRSxVQUFVO0VBQ1o7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UsZUFBZTtFQUNqQjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5oZWFkZXIge1xcbiAgbWFyZ2luOiAzcmVtIDAgMnJlbSAwO1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxLjNzO1xcbiAgYW5pbWF0aW9uLW5hbWU6IGhlYWRlck9wZW5pbmc7XFxuICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAxO1xcbn1cXG5cXG4uaGVhZGVyX190aXRsZSB7XFxuICBmb250LXNpemU6IDNyZW07XFxuICBjb2xvcjogdmFyKC0tcHVycGxlRWxlbWVudHNDb2xvcik7XFxufVxcblxcbi5oZWFkZXJfX3RpdGxlLS1jb2xvciB7XFxuICBjb2xvcjogdmFyKC0tYmx1ZUVsZW1lbnRzQ29sb3IpO1xcbn1cXG5cXG4uaGVhZGVyX190aXRsZSxcXG4uaGVhZGVyX190aXRsZS0tY29sb3Ige1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG59XFxuXFxuLmZhLWdpdGh1YiB7XFxuICBmb250LXNpemU6IDAuNzVlbTtcXG4gIG1hcmdpbi1sZWZ0OiAwLjA1ZW07XFxufVxcblxcbkBrZXlmcmFtZXMgaGVhZGVyT3BlbmluZyB7XFxuICBmcm9tIHtcXG4gICAgb3BhY2l0eTogMDtcXG4gIH1cXG5cXG4gIHRvIHtcXG4gICAgb3BhY2l0eTogMTtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAuaGVhZGVyIHtcXG4gICAgbWFyZ2luLXRvcDogMTByZW07XFxuICB9XFxuXFxuICAuaGVhZGVyX190aXRsZSB7XFxuICAgIGZvbnQtc2l6ZTogNHJlbTtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHVybCA9IFN0cmluZyh1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsKTsgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG5cbiAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgfVxuXG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9IC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcblxuXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsInZhciBnbG9iYWwgPVxuICAodHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnICYmIGdsb2JhbFRoaXMpIHx8XG4gICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgJiYgc2VsZikgfHxcbiAgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnICYmIGdsb2JhbClcblxudmFyIHN1cHBvcnQgPSB7XG4gIHNlYXJjaFBhcmFtczogJ1VSTFNlYXJjaFBhcmFtcycgaW4gZ2xvYmFsLFxuICBpdGVyYWJsZTogJ1N5bWJvbCcgaW4gZ2xvYmFsICYmICdpdGVyYXRvcicgaW4gU3ltYm9sLFxuICBibG9iOlxuICAgICdGaWxlUmVhZGVyJyBpbiBnbG9iYWwgJiZcbiAgICAnQmxvYicgaW4gZ2xvYmFsICYmXG4gICAgKGZ1bmN0aW9uKCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgbmV3IEJsb2IoKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgIH1cbiAgICB9KSgpLFxuICBmb3JtRGF0YTogJ0Zvcm1EYXRhJyBpbiBnbG9iYWwsXG4gIGFycmF5QnVmZmVyOiAnQXJyYXlCdWZmZXInIGluIGdsb2JhbFxufVxuXG5mdW5jdGlvbiBpc0RhdGFWaWV3KG9iaikge1xuICByZXR1cm4gb2JqICYmIERhdGFWaWV3LnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKG9iailcbn1cblxuaWYgKHN1cHBvcnQuYXJyYXlCdWZmZXIpIHtcbiAgdmFyIHZpZXdDbGFzc2VzID0gW1xuICAgICdbb2JqZWN0IEludDhBcnJheV0nLFxuICAgICdbb2JqZWN0IFVpbnQ4QXJyYXldJyxcbiAgICAnW29iamVjdCBVaW50OENsYW1wZWRBcnJheV0nLFxuICAgICdbb2JqZWN0IEludDE2QXJyYXldJyxcbiAgICAnW29iamVjdCBVaW50MTZBcnJheV0nLFxuICAgICdbb2JqZWN0IEludDMyQXJyYXldJyxcbiAgICAnW29iamVjdCBVaW50MzJBcnJheV0nLFxuICAgICdbb2JqZWN0IEZsb2F0MzJBcnJheV0nLFxuICAgICdbb2JqZWN0IEZsb2F0NjRBcnJheV0nXG4gIF1cblxuICB2YXIgaXNBcnJheUJ1ZmZlclZpZXcgPVxuICAgIEFycmF5QnVmZmVyLmlzVmlldyB8fFxuICAgIGZ1bmN0aW9uKG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiB2aWV3Q2xhc3Nlcy5pbmRleE9mKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopKSA+IC0xXG4gICAgfVxufVxuXG5mdW5jdGlvbiBub3JtYWxpemVOYW1lKG5hbWUpIHtcbiAgaWYgKHR5cGVvZiBuYW1lICE9PSAnc3RyaW5nJykge1xuICAgIG5hbWUgPSBTdHJpbmcobmFtZSlcbiAgfVxuICBpZiAoL1teYS16MC05XFwtIyQlJicqKy5eX2B8fiFdL2kudGVzdChuYW1lKSB8fCBuYW1lID09PSAnJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgY2hhcmFjdGVyIGluIGhlYWRlciBmaWVsZCBuYW1lOiBcIicgKyBuYW1lICsgJ1wiJylcbiAgfVxuICByZXR1cm4gbmFtZS50b0xvd2VyQ2FzZSgpXG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZVZhbHVlKHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnKSB7XG4gICAgdmFsdWUgPSBTdHJpbmcodmFsdWUpXG4gIH1cbiAgcmV0dXJuIHZhbHVlXG59XG5cbi8vIEJ1aWxkIGEgZGVzdHJ1Y3RpdmUgaXRlcmF0b3IgZm9yIHRoZSB2YWx1ZSBsaXN0XG5mdW5jdGlvbiBpdGVyYXRvckZvcihpdGVtcykge1xuICB2YXIgaXRlcmF0b3IgPSB7XG4gICAgbmV4dDogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdmFsdWUgPSBpdGVtcy5zaGlmdCgpXG4gICAgICByZXR1cm4ge2RvbmU6IHZhbHVlID09PSB1bmRlZmluZWQsIHZhbHVlOiB2YWx1ZX1cbiAgICB9XG4gIH1cblxuICBpZiAoc3VwcG9ydC5pdGVyYWJsZSkge1xuICAgIGl0ZXJhdG9yW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBpdGVyYXRvclxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBpdGVyYXRvclxufVxuXG5leHBvcnQgZnVuY3Rpb24gSGVhZGVycyhoZWFkZXJzKSB7XG4gIHRoaXMubWFwID0ge31cblxuICBpZiAoaGVhZGVycyBpbnN0YW5jZW9mIEhlYWRlcnMpIHtcbiAgICBoZWFkZXJzLmZvckVhY2goZnVuY3Rpb24odmFsdWUsIG5hbWUpIHtcbiAgICAgIHRoaXMuYXBwZW5kKG5hbWUsIHZhbHVlKVxuICAgIH0sIHRoaXMpXG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShoZWFkZXJzKSkge1xuICAgIGhlYWRlcnMuZm9yRWFjaChmdW5jdGlvbihoZWFkZXIpIHtcbiAgICAgIHRoaXMuYXBwZW5kKGhlYWRlclswXSwgaGVhZGVyWzFdKVxuICAgIH0sIHRoaXMpXG4gIH0gZWxzZSBpZiAoaGVhZGVycykge1xuICAgIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGhlYWRlcnMpLmZvckVhY2goZnVuY3Rpb24obmFtZSkge1xuICAgICAgdGhpcy5hcHBlbmQobmFtZSwgaGVhZGVyc1tuYW1lXSlcbiAgICB9LCB0aGlzKVxuICB9XG59XG5cbkhlYWRlcnMucHJvdG90eXBlLmFwcGVuZCA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIG5hbWUgPSBub3JtYWxpemVOYW1lKG5hbWUpXG4gIHZhbHVlID0gbm9ybWFsaXplVmFsdWUodmFsdWUpXG4gIHZhciBvbGRWYWx1ZSA9IHRoaXMubWFwW25hbWVdXG4gIHRoaXMubWFwW25hbWVdID0gb2xkVmFsdWUgPyBvbGRWYWx1ZSArICcsICcgKyB2YWx1ZSA6IHZhbHVlXG59XG5cbkhlYWRlcnMucHJvdG90eXBlWydkZWxldGUnXSA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgZGVsZXRlIHRoaXMubWFwW25vcm1hbGl6ZU5hbWUobmFtZSldXG59XG5cbkhlYWRlcnMucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgbmFtZSA9IG5vcm1hbGl6ZU5hbWUobmFtZSlcbiAgcmV0dXJuIHRoaXMuaGFzKG5hbWUpID8gdGhpcy5tYXBbbmFtZV0gOiBudWxsXG59XG5cbkhlYWRlcnMucHJvdG90eXBlLmhhcyA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgcmV0dXJuIHRoaXMubWFwLmhhc093blByb3BlcnR5KG5vcm1hbGl6ZU5hbWUobmFtZSkpXG59XG5cbkhlYWRlcnMucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHRoaXMubWFwW25vcm1hbGl6ZU5hbWUobmFtZSldID0gbm9ybWFsaXplVmFsdWUodmFsdWUpXG59XG5cbkhlYWRlcnMucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbihjYWxsYmFjaywgdGhpc0FyZykge1xuICBmb3IgKHZhciBuYW1lIGluIHRoaXMubWFwKSB7XG4gICAgaWYgKHRoaXMubWFwLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgICBjYWxsYmFjay5jYWxsKHRoaXNBcmcsIHRoaXMubWFwW25hbWVdLCBuYW1lLCB0aGlzKVxuICAgIH1cbiAgfVxufVxuXG5IZWFkZXJzLnByb3RvdHlwZS5rZXlzID0gZnVuY3Rpb24oKSB7XG4gIHZhciBpdGVtcyA9IFtdXG4gIHRoaXMuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSwgbmFtZSkge1xuICAgIGl0ZW1zLnB1c2gobmFtZSlcbiAgfSlcbiAgcmV0dXJuIGl0ZXJhdG9yRm9yKGl0ZW1zKVxufVxuXG5IZWFkZXJzLnByb3RvdHlwZS52YWx1ZXMgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGl0ZW1zID0gW11cbiAgdGhpcy5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgaXRlbXMucHVzaCh2YWx1ZSlcbiAgfSlcbiAgcmV0dXJuIGl0ZXJhdG9yRm9yKGl0ZW1zKVxufVxuXG5IZWFkZXJzLnByb3RvdHlwZS5lbnRyaWVzID0gZnVuY3Rpb24oKSB7XG4gIHZhciBpdGVtcyA9IFtdXG4gIHRoaXMuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSwgbmFtZSkge1xuICAgIGl0ZW1zLnB1c2goW25hbWUsIHZhbHVlXSlcbiAgfSlcbiAgcmV0dXJuIGl0ZXJhdG9yRm9yKGl0ZW1zKVxufVxuXG5pZiAoc3VwcG9ydC5pdGVyYWJsZSkge1xuICBIZWFkZXJzLnByb3RvdHlwZVtTeW1ib2wuaXRlcmF0b3JdID0gSGVhZGVycy5wcm90b3R5cGUuZW50cmllc1xufVxuXG5mdW5jdGlvbiBjb25zdW1lZChib2R5KSB7XG4gIGlmIChib2R5LmJvZHlVc2VkKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBUeXBlRXJyb3IoJ0FscmVhZHkgcmVhZCcpKVxuICB9XG4gIGJvZHkuYm9keVVzZWQgPSB0cnVlXG59XG5cbmZ1bmN0aW9uIGZpbGVSZWFkZXJSZWFkeShyZWFkZXIpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJlc29sdmUocmVhZGVyLnJlc3VsdClcbiAgICB9XG4gICAgcmVhZGVyLm9uZXJyb3IgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJlamVjdChyZWFkZXIuZXJyb3IpXG4gICAgfVxuICB9KVxufVxuXG5mdW5jdGlvbiByZWFkQmxvYkFzQXJyYXlCdWZmZXIoYmxvYikge1xuICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKVxuICB2YXIgcHJvbWlzZSA9IGZpbGVSZWFkZXJSZWFkeShyZWFkZXIpXG4gIHJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcihibG9iKVxuICByZXR1cm4gcHJvbWlzZVxufVxuXG5mdW5jdGlvbiByZWFkQmxvYkFzVGV4dChibG9iKSB7XG4gIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpXG4gIHZhciBwcm9taXNlID0gZmlsZVJlYWRlclJlYWR5KHJlYWRlcilcbiAgcmVhZGVyLnJlYWRBc1RleHQoYmxvYilcbiAgcmV0dXJuIHByb21pc2Vcbn1cblxuZnVuY3Rpb24gcmVhZEFycmF5QnVmZmVyQXNUZXh0KGJ1Zikge1xuICB2YXIgdmlldyA9IG5ldyBVaW50OEFycmF5KGJ1ZilcbiAgdmFyIGNoYXJzID0gbmV3IEFycmF5KHZpZXcubGVuZ3RoKVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdmlldy5sZW5ndGg7IGkrKykge1xuICAgIGNoYXJzW2ldID0gU3RyaW5nLmZyb21DaGFyQ29kZSh2aWV3W2ldKVxuICB9XG4gIHJldHVybiBjaGFycy5qb2luKCcnKVxufVxuXG5mdW5jdGlvbiBidWZmZXJDbG9uZShidWYpIHtcbiAgaWYgKGJ1Zi5zbGljZSkge1xuICAgIHJldHVybiBidWYuc2xpY2UoMClcbiAgfSBlbHNlIHtcbiAgICB2YXIgdmlldyA9IG5ldyBVaW50OEFycmF5KGJ1Zi5ieXRlTGVuZ3RoKVxuICAgIHZpZXcuc2V0KG5ldyBVaW50OEFycmF5KGJ1ZikpXG4gICAgcmV0dXJuIHZpZXcuYnVmZmVyXG4gIH1cbn1cblxuZnVuY3Rpb24gQm9keSgpIHtcbiAgdGhpcy5ib2R5VXNlZCA9IGZhbHNlXG5cbiAgdGhpcy5faW5pdEJvZHkgPSBmdW5jdGlvbihib2R5KSB7XG4gICAgLypcbiAgICAgIGZldGNoLW1vY2sgd3JhcHMgdGhlIFJlc3BvbnNlIG9iamVjdCBpbiBhbiBFUzYgUHJveHkgdG9cbiAgICAgIHByb3ZpZGUgdXNlZnVsIHRlc3QgaGFybmVzcyBmZWF0dXJlcyBzdWNoIGFzIGZsdXNoLiBIb3dldmVyLCBvblxuICAgICAgRVM1IGJyb3dzZXJzIHdpdGhvdXQgZmV0Y2ggb3IgUHJveHkgc3VwcG9ydCBwb2xseWZpbGxzIG11c3QgYmUgdXNlZDtcbiAgICAgIHRoZSBwcm94eS1wb2xseWZpbGwgaXMgdW5hYmxlIHRvIHByb3h5IGFuIGF0dHJpYnV0ZSB1bmxlc3MgaXQgZXhpc3RzXG4gICAgICBvbiB0aGUgb2JqZWN0IGJlZm9yZSB0aGUgUHJveHkgaXMgY3JlYXRlZC4gVGhpcyBjaGFuZ2UgZW5zdXJlc1xuICAgICAgUmVzcG9uc2UuYm9keVVzZWQgZXhpc3RzIG9uIHRoZSBpbnN0YW5jZSwgd2hpbGUgbWFpbnRhaW5pbmcgdGhlXG4gICAgICBzZW1hbnRpYyBvZiBzZXR0aW5nIFJlcXVlc3QuYm9keVVzZWQgaW4gdGhlIGNvbnN0cnVjdG9yIGJlZm9yZVxuICAgICAgX2luaXRCb2R5IGlzIGNhbGxlZC5cbiAgICAqL1xuICAgIHRoaXMuYm9keVVzZWQgPSB0aGlzLmJvZHlVc2VkXG4gICAgdGhpcy5fYm9keUluaXQgPSBib2R5XG4gICAgaWYgKCFib2R5KSB7XG4gICAgICB0aGlzLl9ib2R5VGV4dCA9ICcnXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgYm9keSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRoaXMuX2JvZHlUZXh0ID0gYm9keVxuICAgIH0gZWxzZSBpZiAoc3VwcG9ydC5ibG9iICYmIEJsb2IucHJvdG90eXBlLmlzUHJvdG90eXBlT2YoYm9keSkpIHtcbiAgICAgIHRoaXMuX2JvZHlCbG9iID0gYm9keVxuICAgIH0gZWxzZSBpZiAoc3VwcG9ydC5mb3JtRGF0YSAmJiBGb3JtRGF0YS5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihib2R5KSkge1xuICAgICAgdGhpcy5fYm9keUZvcm1EYXRhID0gYm9keVxuICAgIH0gZWxzZSBpZiAoc3VwcG9ydC5zZWFyY2hQYXJhbXMgJiYgVVJMU2VhcmNoUGFyYW1zLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGJvZHkpKSB7XG4gICAgICB0aGlzLl9ib2R5VGV4dCA9IGJvZHkudG9TdHJpbmcoKVxuICAgIH0gZWxzZSBpZiAoc3VwcG9ydC5hcnJheUJ1ZmZlciAmJiBzdXBwb3J0LmJsb2IgJiYgaXNEYXRhVmlldyhib2R5KSkge1xuICAgICAgdGhpcy5fYm9keUFycmF5QnVmZmVyID0gYnVmZmVyQ2xvbmUoYm9keS5idWZmZXIpXG4gICAgICAvLyBJRSAxMC0xMSBjYW4ndCBoYW5kbGUgYSBEYXRhVmlldyBib2R5LlxuICAgICAgdGhpcy5fYm9keUluaXQgPSBuZXcgQmxvYihbdGhpcy5fYm9keUFycmF5QnVmZmVyXSlcbiAgICB9IGVsc2UgaWYgKHN1cHBvcnQuYXJyYXlCdWZmZXIgJiYgKEFycmF5QnVmZmVyLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGJvZHkpIHx8IGlzQXJyYXlCdWZmZXJWaWV3KGJvZHkpKSkge1xuICAgICAgdGhpcy5fYm9keUFycmF5QnVmZmVyID0gYnVmZmVyQ2xvbmUoYm9keSlcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fYm9keVRleHQgPSBib2R5ID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGJvZHkpXG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLmhlYWRlcnMuZ2V0KCdjb250ZW50LXR5cGUnKSkge1xuICAgICAgaWYgKHR5cGVvZiBib2R5ID09PSAnc3RyaW5nJykge1xuICAgICAgICB0aGlzLmhlYWRlcnMuc2V0KCdjb250ZW50LXR5cGUnLCAndGV4dC9wbGFpbjtjaGFyc2V0PVVURi04JylcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5fYm9keUJsb2IgJiYgdGhpcy5fYm9keUJsb2IudHlwZSkge1xuICAgICAgICB0aGlzLmhlYWRlcnMuc2V0KCdjb250ZW50LXR5cGUnLCB0aGlzLl9ib2R5QmxvYi50eXBlKVxuICAgICAgfSBlbHNlIGlmIChzdXBwb3J0LnNlYXJjaFBhcmFtcyAmJiBVUkxTZWFyY2hQYXJhbXMucHJvdG90eXBlLmlzUHJvdG90eXBlT2YoYm9keSkpIHtcbiAgICAgICAgdGhpcy5oZWFkZXJzLnNldCgnY29udGVudC10eXBlJywgJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PVVURi04JylcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpZiAoc3VwcG9ydC5ibG9iKSB7XG4gICAgdGhpcy5ibG9iID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgcmVqZWN0ZWQgPSBjb25zdW1lZCh0aGlzKVxuICAgICAgaWYgKHJlamVjdGVkKSB7XG4gICAgICAgIHJldHVybiByZWplY3RlZFxuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fYm9keUJsb2IpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLl9ib2R5QmxvYilcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5fYm9keUFycmF5QnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobmV3IEJsb2IoW3RoaXMuX2JvZHlBcnJheUJ1ZmZlcl0pKVxuICAgICAgfSBlbHNlIGlmICh0aGlzLl9ib2R5Rm9ybURhdGEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdjb3VsZCBub3QgcmVhZCBGb3JtRGF0YSBib2R5IGFzIGJsb2InKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXcgQmxvYihbdGhpcy5fYm9keVRleHRdKSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmFycmF5QnVmZmVyID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAodGhpcy5fYm9keUFycmF5QnVmZmVyKSB7XG4gICAgICAgIHZhciBpc0NvbnN1bWVkID0gY29uc3VtZWQodGhpcylcbiAgICAgICAgaWYgKGlzQ29uc3VtZWQpIHtcbiAgICAgICAgICByZXR1cm4gaXNDb25zdW1lZFxuICAgICAgICB9XG4gICAgICAgIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcodGhpcy5fYm9keUFycmF5QnVmZmVyKSkge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoXG4gICAgICAgICAgICB0aGlzLl9ib2R5QXJyYXlCdWZmZXIuYnVmZmVyLnNsaWNlKFxuICAgICAgICAgICAgICB0aGlzLl9ib2R5QXJyYXlCdWZmZXIuYnl0ZU9mZnNldCxcbiAgICAgICAgICAgICAgdGhpcy5fYm9keUFycmF5QnVmZmVyLmJ5dGVPZmZzZXQgKyB0aGlzLl9ib2R5QXJyYXlCdWZmZXIuYnl0ZUxlbmd0aFxuICAgICAgICAgICAgKVxuICAgICAgICAgIClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuX2JvZHlBcnJheUJ1ZmZlcilcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYmxvYigpLnRoZW4ocmVhZEJsb2JBc0FycmF5QnVmZmVyKVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHRoaXMudGV4dCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciByZWplY3RlZCA9IGNvbnN1bWVkKHRoaXMpXG4gICAgaWYgKHJlamVjdGVkKSB7XG4gICAgICByZXR1cm4gcmVqZWN0ZWRcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fYm9keUJsb2IpIHtcbiAgICAgIHJldHVybiByZWFkQmxvYkFzVGV4dCh0aGlzLl9ib2R5QmxvYilcbiAgICB9IGVsc2UgaWYgKHRoaXMuX2JvZHlBcnJheUJ1ZmZlcikge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShyZWFkQXJyYXlCdWZmZXJBc1RleHQodGhpcy5fYm9keUFycmF5QnVmZmVyKSlcbiAgICB9IGVsc2UgaWYgKHRoaXMuX2JvZHlGb3JtRGF0YSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdjb3VsZCBub3QgcmVhZCBGb3JtRGF0YSBib2R5IGFzIHRleHQnKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuX2JvZHlUZXh0KVxuICAgIH1cbiAgfVxuXG4gIGlmIChzdXBwb3J0LmZvcm1EYXRhKSB7XG4gICAgdGhpcy5mb3JtRGF0YSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMudGV4dCgpLnRoZW4oZGVjb2RlKVxuICAgIH1cbiAgfVxuXG4gIHRoaXMuanNvbiA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnRleHQoKS50aGVuKEpTT04ucGFyc2UpXG4gIH1cblxuICByZXR1cm4gdGhpc1xufVxuXG4vLyBIVFRQIG1ldGhvZHMgd2hvc2UgY2FwaXRhbGl6YXRpb24gc2hvdWxkIGJlIG5vcm1hbGl6ZWRcbnZhciBtZXRob2RzID0gWydERUxFVEUnLCAnR0VUJywgJ0hFQUQnLCAnT1BUSU9OUycsICdQT1NUJywgJ1BVVCddXG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZU1ldGhvZChtZXRob2QpIHtcbiAgdmFyIHVwY2FzZWQgPSBtZXRob2QudG9VcHBlckNhc2UoKVxuICByZXR1cm4gbWV0aG9kcy5pbmRleE9mKHVwY2FzZWQpID4gLTEgPyB1cGNhc2VkIDogbWV0aG9kXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBSZXF1ZXN0KGlucHV0LCBvcHRpb25zKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBSZXF1ZXN0KSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1BsZWFzZSB1c2UgdGhlIFwibmV3XCIgb3BlcmF0b3IsIHRoaXMgRE9NIG9iamVjdCBjb25zdHJ1Y3RvciBjYW5ub3QgYmUgY2FsbGVkIGFzIGEgZnVuY3Rpb24uJylcbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG4gIHZhciBib2R5ID0gb3B0aW9ucy5ib2R5XG5cbiAgaWYgKGlucHV0IGluc3RhbmNlb2YgUmVxdWVzdCkge1xuICAgIGlmIChpbnB1dC5ib2R5VXNlZCkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQWxyZWFkeSByZWFkJylcbiAgICB9XG4gICAgdGhpcy51cmwgPSBpbnB1dC51cmxcbiAgICB0aGlzLmNyZWRlbnRpYWxzID0gaW5wdXQuY3JlZGVudGlhbHNcbiAgICBpZiAoIW9wdGlvbnMuaGVhZGVycykge1xuICAgICAgdGhpcy5oZWFkZXJzID0gbmV3IEhlYWRlcnMoaW5wdXQuaGVhZGVycylcbiAgICB9XG4gICAgdGhpcy5tZXRob2QgPSBpbnB1dC5tZXRob2RcbiAgICB0aGlzLm1vZGUgPSBpbnB1dC5tb2RlXG4gICAgdGhpcy5zaWduYWwgPSBpbnB1dC5zaWduYWxcbiAgICBpZiAoIWJvZHkgJiYgaW5wdXQuX2JvZHlJbml0ICE9IG51bGwpIHtcbiAgICAgIGJvZHkgPSBpbnB1dC5fYm9keUluaXRcbiAgICAgIGlucHV0LmJvZHlVc2VkID0gdHJ1ZVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB0aGlzLnVybCA9IFN0cmluZyhpbnB1dClcbiAgfVxuXG4gIHRoaXMuY3JlZGVudGlhbHMgPSBvcHRpb25zLmNyZWRlbnRpYWxzIHx8IHRoaXMuY3JlZGVudGlhbHMgfHwgJ3NhbWUtb3JpZ2luJ1xuICBpZiAob3B0aW9ucy5oZWFkZXJzIHx8ICF0aGlzLmhlYWRlcnMpIHtcbiAgICB0aGlzLmhlYWRlcnMgPSBuZXcgSGVhZGVycyhvcHRpb25zLmhlYWRlcnMpXG4gIH1cbiAgdGhpcy5tZXRob2QgPSBub3JtYWxpemVNZXRob2Qob3B0aW9ucy5tZXRob2QgfHwgdGhpcy5tZXRob2QgfHwgJ0dFVCcpXG4gIHRoaXMubW9kZSA9IG9wdGlvbnMubW9kZSB8fCB0aGlzLm1vZGUgfHwgbnVsbFxuICB0aGlzLnNpZ25hbCA9IG9wdGlvbnMuc2lnbmFsIHx8IHRoaXMuc2lnbmFsXG4gIHRoaXMucmVmZXJyZXIgPSBudWxsXG5cbiAgaWYgKCh0aGlzLm1ldGhvZCA9PT0gJ0dFVCcgfHwgdGhpcy5tZXRob2QgPT09ICdIRUFEJykgJiYgYm9keSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0JvZHkgbm90IGFsbG93ZWQgZm9yIEdFVCBvciBIRUFEIHJlcXVlc3RzJylcbiAgfVxuICB0aGlzLl9pbml0Qm9keShib2R5KVxuXG4gIGlmICh0aGlzLm1ldGhvZCA9PT0gJ0dFVCcgfHwgdGhpcy5tZXRob2QgPT09ICdIRUFEJykge1xuICAgIGlmIChvcHRpb25zLmNhY2hlID09PSAnbm8tc3RvcmUnIHx8IG9wdGlvbnMuY2FjaGUgPT09ICduby1jYWNoZScpIHtcbiAgICAgIC8vIFNlYXJjaCBmb3IgYSAnXycgcGFyYW1ldGVyIGluIHRoZSBxdWVyeSBzdHJpbmdcbiAgICAgIHZhciByZVBhcmFtU2VhcmNoID0gLyhbPyZdKV89W14mXSovXG4gICAgICBpZiAocmVQYXJhbVNlYXJjaC50ZXN0KHRoaXMudXJsKSkge1xuICAgICAgICAvLyBJZiBpdCBhbHJlYWR5IGV4aXN0cyB0aGVuIHNldCB0aGUgdmFsdWUgd2l0aCB0aGUgY3VycmVudCB0aW1lXG4gICAgICAgIHRoaXMudXJsID0gdGhpcy51cmwucmVwbGFjZShyZVBhcmFtU2VhcmNoLCAnJDFfPScgKyBuZXcgRGF0ZSgpLmdldFRpbWUoKSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE90aGVyd2lzZSBhZGQgYSBuZXcgJ18nIHBhcmFtZXRlciB0byB0aGUgZW5kIHdpdGggdGhlIGN1cnJlbnQgdGltZVxuICAgICAgICB2YXIgcmVRdWVyeVN0cmluZyA9IC9cXD8vXG4gICAgICAgIHRoaXMudXJsICs9IChyZVF1ZXJ5U3RyaW5nLnRlc3QodGhpcy51cmwpID8gJyYnIDogJz8nKSArICdfPScgKyBuZXcgRGF0ZSgpLmdldFRpbWUoKVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5SZXF1ZXN0LnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFJlcXVlc3QodGhpcywge2JvZHk6IHRoaXMuX2JvZHlJbml0fSlcbn1cblxuZnVuY3Rpb24gZGVjb2RlKGJvZHkpIHtcbiAgdmFyIGZvcm0gPSBuZXcgRm9ybURhdGEoKVxuICBib2R5XG4gICAgLnRyaW0oKVxuICAgIC5zcGxpdCgnJicpXG4gICAgLmZvckVhY2goZnVuY3Rpb24oYnl0ZXMpIHtcbiAgICAgIGlmIChieXRlcykge1xuICAgICAgICB2YXIgc3BsaXQgPSBieXRlcy5zcGxpdCgnPScpXG4gICAgICAgIHZhciBuYW1lID0gc3BsaXQuc2hpZnQoKS5yZXBsYWNlKC9cXCsvZywgJyAnKVxuICAgICAgICB2YXIgdmFsdWUgPSBzcGxpdC5qb2luKCc9JykucmVwbGFjZSgvXFwrL2csICcgJylcbiAgICAgICAgZm9ybS5hcHBlbmQoZGVjb2RlVVJJQ29tcG9uZW50KG5hbWUpLCBkZWNvZGVVUklDb21wb25lbnQodmFsdWUpKVxuICAgICAgfVxuICAgIH0pXG4gIHJldHVybiBmb3JtXG59XG5cbmZ1bmN0aW9uIHBhcnNlSGVhZGVycyhyYXdIZWFkZXJzKSB7XG4gIHZhciBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKVxuICAvLyBSZXBsYWNlIGluc3RhbmNlcyBvZiBcXHJcXG4gYW5kIFxcbiBmb2xsb3dlZCBieSBhdCBsZWFzdCBvbmUgc3BhY2Ugb3IgaG9yaXpvbnRhbCB0YWIgd2l0aCBhIHNwYWNlXG4gIC8vIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM3MjMwI3NlY3Rpb24tMy4yXG4gIHZhciBwcmVQcm9jZXNzZWRIZWFkZXJzID0gcmF3SGVhZGVycy5yZXBsYWNlKC9cXHI/XFxuW1xcdCBdKy9nLCAnICcpXG4gIC8vIEF2b2lkaW5nIHNwbGl0IHZpYSByZWdleCB0byB3b3JrIGFyb3VuZCBhIGNvbW1vbiBJRTExIGJ1ZyB3aXRoIHRoZSBjb3JlLWpzIDMuNi4wIHJlZ2V4IHBvbHlmaWxsXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9naXRodWIvZmV0Y2gvaXNzdWVzLzc0OFxuICAvLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvNzUxXG4gIHByZVByb2Nlc3NlZEhlYWRlcnNcbiAgICAuc3BsaXQoJ1xccicpXG4gICAgLm1hcChmdW5jdGlvbihoZWFkZXIpIHtcbiAgICAgIHJldHVybiBoZWFkZXIuaW5kZXhPZignXFxuJykgPT09IDAgPyBoZWFkZXIuc3Vic3RyKDEsIGhlYWRlci5sZW5ndGgpIDogaGVhZGVyXG4gICAgfSlcbiAgICAuZm9yRWFjaChmdW5jdGlvbihsaW5lKSB7XG4gICAgICB2YXIgcGFydHMgPSBsaW5lLnNwbGl0KCc6JylcbiAgICAgIHZhciBrZXkgPSBwYXJ0cy5zaGlmdCgpLnRyaW0oKVxuICAgICAgaWYgKGtleSkge1xuICAgICAgICB2YXIgdmFsdWUgPSBwYXJ0cy5qb2luKCc6JykudHJpbSgpXG4gICAgICAgIGhlYWRlcnMuYXBwZW5kKGtleSwgdmFsdWUpXG4gICAgICB9XG4gICAgfSlcbiAgcmV0dXJuIGhlYWRlcnNcbn1cblxuQm9keS5jYWxsKFJlcXVlc3QucHJvdG90eXBlKVxuXG5leHBvcnQgZnVuY3Rpb24gUmVzcG9uc2UoYm9keUluaXQsIG9wdGlvbnMpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFJlc3BvbnNlKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1BsZWFzZSB1c2UgdGhlIFwibmV3XCIgb3BlcmF0b3IsIHRoaXMgRE9NIG9iamVjdCBjb25zdHJ1Y3RvciBjYW5ub3QgYmUgY2FsbGVkIGFzIGEgZnVuY3Rpb24uJylcbiAgfVxuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge31cbiAgfVxuXG4gIHRoaXMudHlwZSA9ICdkZWZhdWx0J1xuICB0aGlzLnN0YXR1cyA9IG9wdGlvbnMuc3RhdHVzID09PSB1bmRlZmluZWQgPyAyMDAgOiBvcHRpb25zLnN0YXR1c1xuICB0aGlzLm9rID0gdGhpcy5zdGF0dXMgPj0gMjAwICYmIHRoaXMuc3RhdHVzIDwgMzAwXG4gIHRoaXMuc3RhdHVzVGV4dCA9IG9wdGlvbnMuc3RhdHVzVGV4dCA9PT0gdW5kZWZpbmVkID8gJycgOiAnJyArIG9wdGlvbnMuc3RhdHVzVGV4dFxuICB0aGlzLmhlYWRlcnMgPSBuZXcgSGVhZGVycyhvcHRpb25zLmhlYWRlcnMpXG4gIHRoaXMudXJsID0gb3B0aW9ucy51cmwgfHwgJydcbiAgdGhpcy5faW5pdEJvZHkoYm9keUluaXQpXG59XG5cbkJvZHkuY2FsbChSZXNwb25zZS5wcm90b3R5cGUpXG5cblJlc3BvbnNlLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFJlc3BvbnNlKHRoaXMuX2JvZHlJbml0LCB7XG4gICAgc3RhdHVzOiB0aGlzLnN0YXR1cyxcbiAgICBzdGF0dXNUZXh0OiB0aGlzLnN0YXR1c1RleHQsXG4gICAgaGVhZGVyczogbmV3IEhlYWRlcnModGhpcy5oZWFkZXJzKSxcbiAgICB1cmw6IHRoaXMudXJsXG4gIH0pXG59XG5cblJlc3BvbnNlLmVycm9yID0gZnVuY3Rpb24oKSB7XG4gIHZhciByZXNwb25zZSA9IG5ldyBSZXNwb25zZShudWxsLCB7c3RhdHVzOiAwLCBzdGF0dXNUZXh0OiAnJ30pXG4gIHJlc3BvbnNlLnR5cGUgPSAnZXJyb3InXG4gIHJldHVybiByZXNwb25zZVxufVxuXG52YXIgcmVkaXJlY3RTdGF0dXNlcyA9IFszMDEsIDMwMiwgMzAzLCAzMDcsIDMwOF1cblxuUmVzcG9uc2UucmVkaXJlY3QgPSBmdW5jdGlvbih1cmwsIHN0YXR1cykge1xuICBpZiAocmVkaXJlY3RTdGF0dXNlcy5pbmRleE9mKHN0YXR1cykgPT09IC0xKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0ludmFsaWQgc3RhdHVzIGNvZGUnKVxuICB9XG5cbiAgcmV0dXJuIG5ldyBSZXNwb25zZShudWxsLCB7c3RhdHVzOiBzdGF0dXMsIGhlYWRlcnM6IHtsb2NhdGlvbjogdXJsfX0pXG59XG5cbmV4cG9ydCB2YXIgRE9NRXhjZXB0aW9uID0gZ2xvYmFsLkRPTUV4Y2VwdGlvblxudHJ5IHtcbiAgbmV3IERPTUV4Y2VwdGlvbigpXG59IGNhdGNoIChlcnIpIHtcbiAgRE9NRXhjZXB0aW9uID0gZnVuY3Rpb24obWVzc2FnZSwgbmFtZSkge1xuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2VcbiAgICB0aGlzLm5hbWUgPSBuYW1lXG4gICAgdmFyIGVycm9yID0gRXJyb3IobWVzc2FnZSlcbiAgICB0aGlzLnN0YWNrID0gZXJyb3Iuc3RhY2tcbiAgfVxuICBET01FeGNlcHRpb24ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFcnJvci5wcm90b3R5cGUpXG4gIERPTUV4Y2VwdGlvbi5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBET01FeGNlcHRpb25cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZldGNoKGlucHV0LCBpbml0KSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICB2YXIgcmVxdWVzdCA9IG5ldyBSZXF1ZXN0KGlucHV0LCBpbml0KVxuXG4gICAgaWYgKHJlcXVlc3Quc2lnbmFsICYmIHJlcXVlc3Quc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgIHJldHVybiByZWplY3QobmV3IERPTUV4Y2VwdGlvbignQWJvcnRlZCcsICdBYm9ydEVycm9yJykpXG4gICAgfVxuXG4gICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpXG5cbiAgICBmdW5jdGlvbiBhYm9ydFhocigpIHtcbiAgICAgIHhoci5hYm9ydCgpXG4gICAgfVxuXG4gICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIG9wdGlvbnMgPSB7XG4gICAgICAgIHN0YXR1czogeGhyLnN0YXR1cyxcbiAgICAgICAgc3RhdHVzVGV4dDogeGhyLnN0YXR1c1RleHQsXG4gICAgICAgIGhlYWRlcnM6IHBhcnNlSGVhZGVycyh4aHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkgfHwgJycpXG4gICAgICB9XG4gICAgICBvcHRpb25zLnVybCA9ICdyZXNwb25zZVVSTCcgaW4geGhyID8geGhyLnJlc3BvbnNlVVJMIDogb3B0aW9ucy5oZWFkZXJzLmdldCgnWC1SZXF1ZXN0LVVSTCcpXG4gICAgICB2YXIgYm9keSA9ICdyZXNwb25zZScgaW4geGhyID8geGhyLnJlc3BvbnNlIDogeGhyLnJlc3BvbnNlVGV4dFxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgcmVzb2x2ZShuZXcgUmVzcG9uc2UoYm9keSwgb3B0aW9ucykpXG4gICAgICB9LCAwKVxuICAgIH1cblxuICAgIHhoci5vbmVycm9yID0gZnVuY3Rpb24oKSB7XG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICByZWplY3QobmV3IFR5cGVFcnJvcignTmV0d29yayByZXF1ZXN0IGZhaWxlZCcpKVxuICAgICAgfSwgMClcbiAgICB9XG5cbiAgICB4aHIub250aW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICByZWplY3QobmV3IFR5cGVFcnJvcignTmV0d29yayByZXF1ZXN0IGZhaWxlZCcpKVxuICAgICAgfSwgMClcbiAgICB9XG5cbiAgICB4aHIub25hYm9ydCA9IGZ1bmN0aW9uKCkge1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgcmVqZWN0KG5ldyBET01FeGNlcHRpb24oJ0Fib3J0ZWQnLCAnQWJvcnRFcnJvcicpKVxuICAgICAgfSwgMClcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmaXhVcmwodXJsKSB7XG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gdXJsID09PSAnJyAmJiBnbG9iYWwubG9jYXRpb24uaHJlZiA/IGdsb2JhbC5sb2NhdGlvbi5ocmVmIDogdXJsXG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiB1cmxcbiAgICAgIH1cbiAgICB9XG5cbiAgICB4aHIub3BlbihyZXF1ZXN0Lm1ldGhvZCwgZml4VXJsKHJlcXVlc3QudXJsKSwgdHJ1ZSlcblxuICAgIGlmIChyZXF1ZXN0LmNyZWRlbnRpYWxzID09PSAnaW5jbHVkZScpIHtcbiAgICAgIHhoci53aXRoQ3JlZGVudGlhbHMgPSB0cnVlXG4gICAgfSBlbHNlIGlmIChyZXF1ZXN0LmNyZWRlbnRpYWxzID09PSAnb21pdCcpIHtcbiAgICAgIHhoci53aXRoQ3JlZGVudGlhbHMgPSBmYWxzZVxuICAgIH1cblxuICAgIGlmICgncmVzcG9uc2VUeXBlJyBpbiB4aHIpIHtcbiAgICAgIGlmIChzdXBwb3J0LmJsb2IpIHtcbiAgICAgICAgeGhyLnJlc3BvbnNlVHlwZSA9ICdibG9iJ1xuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgc3VwcG9ydC5hcnJheUJ1ZmZlciAmJlxuICAgICAgICByZXF1ZXN0LmhlYWRlcnMuZ2V0KCdDb250ZW50LVR5cGUnKSAmJlxuICAgICAgICByZXF1ZXN0LmhlYWRlcnMuZ2V0KCdDb250ZW50LVR5cGUnKS5pbmRleE9mKCdhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0nKSAhPT0gLTFcbiAgICAgICkge1xuICAgICAgICB4aHIucmVzcG9uc2VUeXBlID0gJ2FycmF5YnVmZmVyJ1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpbml0ICYmIHR5cGVvZiBpbml0LmhlYWRlcnMgPT09ICdvYmplY3QnICYmICEoaW5pdC5oZWFkZXJzIGluc3RhbmNlb2YgSGVhZGVycykpIHtcbiAgICAgIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGluaXQuaGVhZGVycykuZm9yRWFjaChmdW5jdGlvbihuYW1lKSB7XG4gICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKG5hbWUsIG5vcm1hbGl6ZVZhbHVlKGluaXQuaGVhZGVyc1tuYW1lXSkpXG4gICAgICB9KVxuICAgIH0gZWxzZSB7XG4gICAgICByZXF1ZXN0LmhlYWRlcnMuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSwgbmFtZSkge1xuICAgICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcihuYW1lLCB2YWx1ZSlcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgaWYgKHJlcXVlc3Quc2lnbmFsKSB7XG4gICAgICByZXF1ZXN0LnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsIGFib3J0WGhyKVxuXG4gICAgICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIERPTkUgKHN1Y2Nlc3Mgb3IgZmFpbHVyZSlcbiAgICAgICAgaWYgKHhoci5yZWFkeVN0YXRlID09PSA0KSB7XG4gICAgICAgICAgcmVxdWVzdC5zaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBhYm9ydFhocilcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHhoci5zZW5kKHR5cGVvZiByZXF1ZXN0Ll9ib2R5SW5pdCA9PT0gJ3VuZGVmaW5lZCcgPyBudWxsIDogcmVxdWVzdC5fYm9keUluaXQpXG4gIH0pXG59XG5cbmZldGNoLnBvbHlmaWxsID0gdHJ1ZVxuXG5pZiAoIWdsb2JhbC5mZXRjaCkge1xuICBnbG9iYWwuZmV0Y2ggPSBmZXRjaFxuICBnbG9iYWwuSGVhZGVycyA9IEhlYWRlcnNcbiAgZ2xvYmFsLlJlcXVlc3QgPSBSZXF1ZXN0XG4gIGdsb2JhbC5SZXNwb25zZSA9IFJlc3BvbnNlXG59XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbi5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IGNzcyBmcm9tIFwiLi4vc3R5bGVzL21haW4uY3NzXCI7XG5cbmNvbnN0IGFwaVVybCA9IFwiaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS91c2Vyc1wiO1xuXG5jb25zdCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5maW5kLXVzZXJfX2Zvcm1cIik7XG5cbmZ1bmN0aW9uIGluaXQoZSkge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIHZhbGlkYXRlRm9ybSgpO1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZUZvcm0oKSB7XG4gIGxldCB1c2VybmFtZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb3JtX19pbnB1dC0tdXNlcm5hbWVcIik7XG5cbiAgaWYgKHVzZXJuYW1lSW5wdXQudmFsdWUubGVuZ3RoID49IDEpIHtcbiAgICBsb2FkVXNlclJlcG9zKCk7XG4gIH0gZWxzZSB7XG4gICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCh0cnVlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBsb2FkVXNlclJlcG9zKCkge1xuICBsZXQgdXNlcm5hbWVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybV9faW5wdXQtLXVzZXJuYW1lXCIpO1xuXG4gIGZ1bmN0aW9uIHNvcnRlZERhdGEoZGF0YSkge1xuICAgIHJldHVybiBkYXRhLnNvcnQoKGEsIGIpID0+IGIuc3RhcmdhemVyc19jb3VudCAtIGEuc3RhcmdhemVyc19jb3VudCk7XG4gIH1cblxuICBmdW5jdGlvbiBhdmF0YXJEYXRhKGRhdGEpIHtcbiAgICByZXR1cm4gZGF0YVswXVtcIm93bmVyXCJdW1wiYXZhdGFyX3VybFwiXTtcbiAgfVxuXG4gIGZldGNoKGAke2FwaVVybH0vJHt1c2VybmFtZUlucHV0LnZhbHVlfS9yZXBvcz9wYWdlPTEmcGVyX3BhZ2U9MTAwMGApXG4gICAgLnRoZW4oKHJlc3ApID0+IHtcbiAgICAgIGlmIChyZXNwLm9rKSB7XG4gICAgICAgIHJldHVybiByZXNwLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZXNwKTtcbiAgICB9KVxuICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICB1c2VybmFtZUlucHV0LnZhbHVlID0gXCJcIjtcbiAgICAgIHVzZXJuYW1lSW5wdXQuY2xhc3NMaXN0LnJlbW92ZShcImZvcm1fX2lucHV0LS11c2VybmFtZS1lcnJvclwiKTtcbiAgICAgIGluc2VydFVzZXJSZXBvcyhzb3J0ZWREYXRhKGRhdGEpKTtcbiAgICAgIGxvYWRVc2VyQXZhdGFyKGF2YXRhckRhdGEoZGF0YSkpO1xuICAgICAgbG9hZFVzZXJOYW1lKGRhdGEpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIHVzZXJuYW1lSW5wdXQudmFsdWUgPSBcIlwiO1xuICAgICAgdXNlcm5hbWVJbnB1dC5jbGFzc0xpc3QuYWRkKFwiZm9ybV9faW5wdXQtLXVzZXJuYW1lLWVycm9yXCIpO1xuICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCh0cnVlKTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gaW5zZXJ0VXNlclJlcG9zKHJlcG9zQXJyKSB7XG4gIGNvbnN0IHJlcG9zTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucmVwb3NpdG9yaWVzX19saXN0XCIpO1xuICBjb25zdCByZXBvc0xpc3RFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5saXN0X19lbGVtZW50XCIpO1xuXG4gIHJlcG9zTGlzdC5pbm5lckhUTUwgPSBcIlwiO1xuXG4gIHJldHVybiByZXBvc0Fyci5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgY29uc3QgY2xvbmVSZXBvc0xpc3RFbGVtZW50ID0gcmVwb3NMaXN0RWxlbWVudC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgY2xvbmVSZXBvc0xpc3RFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJsaXN0X19lbGVtZW50LS1wcm90b3R5cGVcIik7XG5cbiAgICBmdW5jdGlvbiBzZXROYW1lT2ZSZXBvc2l0b3J5KCkge1xuICAgICAgY29uc3QgbmFtZU9mUmVwb3NpdG9yeSA9IGNsb25lUmVwb3NMaXN0RWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgICBcIi5lbGVtZW50LXJlcG8tbmFtZV9fdGl0bGVcIlxuICAgICAgKTtcbiAgICAgIHJldHVybiAobmFtZU9mUmVwb3NpdG9yeS5pbm5lclRleHQgPSBpdGVtLm5hbWUpO1xuICAgIH1cbiAgICBzZXROYW1lT2ZSZXBvc2l0b3J5KCk7XG5cbiAgICBmdW5jdGlvbiBzZXRJZE9mUmVwb3NpdG9yeSgpIHtcbiAgICAgIGNvbnN0IGlkT2ZSZXBvc2l0b3J5ID0gY2xvbmVSZXBvc0xpc3RFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaWRfX251bWJlclwiKTtcbiAgICAgIHJldHVybiAoaWRPZlJlcG9zaXRvcnkuaW5uZXJUZXh0ID0gaXRlbS5pZCk7XG4gICAgfVxuICAgIHNldElkT2ZSZXBvc2l0b3J5KCk7XG5cbiAgICBmdW5jdGlvbiBzZXREZXNjcmlwdGlvbk9mUmVwb3NpdG9yeSgpIHtcbiAgICAgIGNvbnN0IGRlc2NPZlJlcG9zaXRvcnkgPSBjbG9uZVJlcG9zTGlzdEVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICAgXCIuZWxlbWVudC1yZXBvLWRlc2NfX3RleHRcIlxuICAgICAgKTtcbiAgICAgIGlmIChpdGVtLmRlc2NyaXB0aW9uKSB7XG4gICAgICAgIHJldHVybiAoZGVzY09mUmVwb3NpdG9yeS5pbm5lclRleHQgPSBpdGVtLmRlc2NyaXB0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiAoZGVzY09mUmVwb3NpdG9yeS5pbm5lclRleHQgPSBgTm8gZGVzY3JpcHRpb25gKTtcbiAgICAgIH1cbiAgICB9XG4gICAgc2V0RGVzY3JpcHRpb25PZlJlcG9zaXRvcnkoKTtcblxuICAgIGZ1bmN0aW9uIHNldExhbmd1YWdlT2ZSZXBvc2l0b3J5KCkge1xuICAgICAgY29uc3QgbGFuZ09mUmVwb3NpdG9yeUNpcmNsZSA9XG4gICAgICAgIGNsb25lUmVwb3NMaXN0RWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmZhLWNpcmNsZVwiKTtcbiAgICAgIGNvbnN0IGxhbmdPZlJlcG9zaXRvcnkgPSBjbG9uZVJlcG9zTGlzdEVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICAgXCIuZWxlbWVudC1yZXBvLWRldGFpbHNfX2xhbmctdGV4dFwiXG4gICAgICApO1xuXG4gICAgICBpZiAoaXRlbS5sYW5ndWFnZSA9PT0gXCJKYXZhU2NyaXB0XCIpIHtcbiAgICAgICAgbGFuZ09mUmVwb3NpdG9yeUNpcmNsZS5zdHlsZS5jb2xvciA9IFwiI2YxZTA1YVwiO1xuICAgICAgICByZXR1cm4gKGxhbmdPZlJlcG9zaXRvcnkuaW5uZXJUZXh0ID0gaXRlbS5sYW5ndWFnZSk7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbS5sYW5ndWFnZSA9PT0gXCJUeXBlU2NyaXB0XCIpIHtcbiAgICAgICAgbGFuZ09mUmVwb3NpdG9yeUNpcmNsZS5zdHlsZS5jb2xvciA9IFwiIzJiNzQ4OVwiO1xuICAgICAgICByZXR1cm4gKGxhbmdPZlJlcG9zaXRvcnkuaW5uZXJUZXh0ID0gaXRlbS5sYW5ndWFnZSk7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbS5sYW5ndWFnZSA9PT0gXCJIVE1MXCIpIHtcbiAgICAgICAgbGFuZ09mUmVwb3NpdG9yeUNpcmNsZS5zdHlsZS5jb2xvciA9IFwiI2U0NGIyM1wiO1xuICAgICAgICByZXR1cm4gKGxhbmdPZlJlcG9zaXRvcnkuaW5uZXJUZXh0ID0gaXRlbS5sYW5ndWFnZSk7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbS5sYW5ndWFnZSA9PT0gXCJDU1NcIikge1xuICAgICAgICBsYW5nT2ZSZXBvc2l0b3J5Q2lyY2xlLnN0eWxlLmNvbG9yID0gXCIjNTYzZDdjXCI7XG4gICAgICAgIHJldHVybiAobGFuZ09mUmVwb3NpdG9yeS5pbm5lclRleHQgPSBpdGVtLmxhbmd1YWdlKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtLmxhbmd1YWdlID09PSBcIlBIUFwiKSB7XG4gICAgICAgIGxhbmdPZlJlcG9zaXRvcnlDaXJjbGUuc3R5bGUuY29sb3IgPSBcIiM0RjVEOTVcIjtcbiAgICAgICAgcmV0dXJuIChsYW5nT2ZSZXBvc2l0b3J5LmlubmVyVGV4dCA9IGl0ZW0ubGFuZ3VhZ2UpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW0ubGFuZ3VhZ2UgPT09IFwiVnVlXCIpIHtcbiAgICAgICAgbGFuZ09mUmVwb3NpdG9yeUNpcmNsZS5zdHlsZS5jb2xvciA9IFwiIzJjM2U1MFwiO1xuICAgICAgICByZXR1cm4gKGxhbmdPZlJlcG9zaXRvcnkuaW5uZXJUZXh0ID0gaXRlbS5sYW5ndWFnZSk7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbS5sYW5ndWFnZSA9PT0gXCJHb1wiKSB7XG4gICAgICAgIGxhbmdPZlJlcG9zaXRvcnlDaXJjbGUuc3R5bGUuY29sb3IgPSBcIiMzNzVlYWJcIjtcbiAgICAgICAgcmV0dXJuIChsYW5nT2ZSZXBvc2l0b3J5LmlubmVyVGV4dCA9IGl0ZW0ubGFuZ3VhZ2UpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW0ubGFuZ3VhZ2UgPT09IFwiU3dpZnRcIikge1xuICAgICAgICBsYW5nT2ZSZXBvc2l0b3J5Q2lyY2xlLnN0eWxlLmNvbG9yID0gXCIjZmZhYzQ1XCI7XG4gICAgICAgIHJldHVybiAobGFuZ09mUmVwb3NpdG9yeS5pbm5lclRleHQgPSBpdGVtLmxhbmd1YWdlKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtLmxhbmd1YWdlID09PSBcIkphdmFcIikge1xuICAgICAgICBsYW5nT2ZSZXBvc2l0b3J5Q2lyY2xlLnN0eWxlLmNvbG9yID0gXCIjYjA3MjE5XCI7XG4gICAgICAgIHJldHVybiAobGFuZ09mUmVwb3NpdG9yeS5pbm5lclRleHQgPSBpdGVtLmxhbmd1YWdlKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtLmxhbmd1YWdlID09PSBcIlJ1c3RcIikge1xuICAgICAgICBsYW5nT2ZSZXBvc2l0b3J5Q2lyY2xlLnN0eWxlLmNvbG9yID0gXCIjZGVhNTg0XCI7XG4gICAgICAgIHJldHVybiAobGFuZ09mUmVwb3NpdG9yeS5pbm5lclRleHQgPSBpdGVtLmxhbmd1YWdlKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtLmxhbmd1YWdlID09PSBcIlB5dGhvblwiKSB7XG4gICAgICAgIGxhbmdPZlJlcG9zaXRvcnlDaXJjbGUuc3R5bGUuY29sb3IgPSBcIiMzNTcyQTVcIjtcbiAgICAgICAgcmV0dXJuIChsYW5nT2ZSZXBvc2l0b3J5LmlubmVyVGV4dCA9IGl0ZW0ubGFuZ3VhZ2UpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW0ubGFuZ3VhZ2UgPT09IG51bGwpIHtcbiAgICAgICAgbGFuZ09mUmVwb3NpdG9yeUNpcmNsZS5zdHlsZS5jb2xvciA9IFwiI2I2YjZiNlwiO1xuICAgICAgICByZXR1cm4gKGxhbmdPZlJlcG9zaXRvcnkuaW5uZXJUZXh0ID0gXCJubyBkYXRhXCIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGFuZ09mUmVwb3NpdG9yeUNpcmNsZS5zdHlsZS5jb2xvciA9IFwiIzJiMDBkNFwiO1xuICAgICAgICByZXR1cm4gKGxhbmdPZlJlcG9zaXRvcnkuaW5uZXJUZXh0ID0gaXRlbS5sYW5ndWFnZSk7XG4gICAgICB9XG4gICAgfVxuICAgIHNldExhbmd1YWdlT2ZSZXBvc2l0b3J5KCk7XG5cbiAgICBmdW5jdGlvbiBzZXRTdGFyc09mUmVwb3NpdG9yeSgpIHtcbiAgICAgIGNvbnN0IHN0YXJzT2ZSZXBvc2l0b3J5ID0gY2xvbmVSZXBvc0xpc3RFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgIFwiLmVsZW1lbnQtcmVwby1kZXRhaWxzX19zdGFycy10ZXh0XCJcbiAgICAgICk7XG4gICAgICBpZiAoaXRlbS5zdGFyZ2F6ZXJzX2NvdW50KSB7XG4gICAgICAgIHJldHVybiAoc3RhcnNPZlJlcG9zaXRvcnkuaW5uZXJUZXh0ID0gaXRlbS5zdGFyZ2F6ZXJzX2NvdW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiAoc3RhcnNPZlJlcG9zaXRvcnkuaW5uZXJUZXh0ID0gYDBgKTtcbiAgICAgIH1cbiAgICB9XG4gICAgc2V0U3RhcnNPZlJlcG9zaXRvcnkoKTtcblxuICAgIGZ1bmN0aW9uIHNldEZvcmtzT2ZSZXBvc2l0b3J5KCkge1xuICAgICAgY29uc3QgZm9ya3NPZlJlcG9zaXRvcnkgPSBjbG9uZVJlcG9zTGlzdEVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICAgXCIuZWxlbWVudC1yZXBvLWRldGFpbHNfX2ZvcmtzLXRleHRcIlxuICAgICAgKTtcbiAgICAgIGlmIChpdGVtLmZvcmtzKSB7XG4gICAgICAgIHJldHVybiAoZm9ya3NPZlJlcG9zaXRvcnkuaW5uZXJUZXh0ID0gaXRlbS5mb3Jrcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gKGZvcmtzT2ZSZXBvc2l0b3J5LmlubmVyVGV4dCA9IGAwYCk7XG4gICAgICB9XG4gICAgfVxuICAgIHNldEZvcmtzT2ZSZXBvc2l0b3J5KCk7XG5cbiAgICByZXBvc0xpc3QuYXBwZW5kQ2hpbGQoY2xvbmVSZXBvc0xpc3RFbGVtZW50KTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHNob3dBdmF0YXJTZWN0aW9uKCkge1xuICBjb25zdCBhdmF0YXJIZWFkZXJFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yZXBvc2l0b3JpZXNfX3VzZXJcIik7XG4gIHJldHVybiBhdmF0YXJIZWFkZXJFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJyZXBvc2l0b3JpZXNfX3VzZXItLWFjdGl2ZVwiKTtcbn1cblxuZnVuY3Rpb24gbG9hZFVzZXJBdmF0YXIocmVwb3NBdmF0YXIpIHtcbiAgc2hvd0F2YXRhclNlY3Rpb24oKTtcblxuICBjb25zdCBhdmF0YXJVcmwgPSByZXBvc0F2YXRhcjtcbiAgY29uc3QgdXNlckF2YXRhciA9IGRvY3VtZW50XG4gICAgLnF1ZXJ5U2VsZWN0b3IoXCIudXNlcl9faW1nXCIpXG4gICAgLnNldEF0dHJpYnV0ZShcInNyY1wiLCBhdmF0YXJVcmwpO1xufVxuXG5mdW5jdGlvbiBsb2FkVXNlck5hbWUodXNlcm5hbWVPZlJlcG9zKSB7XG4gIGNvbnN0IGxvZ2luID0gdXNlcm5hbWVPZlJlcG9zWzBdW1wib3duZXJcIl1bXCJsb2dpblwiXTtcbiAgY29uc3QgdXNlck5hbWUgPSAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICBcIi51c2VyX19uYW1lXCJcbiAgKS5pbm5lclRleHQgPSBgQCR7bG9naW59YCk7XG59XG5cbmZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBpbml0KTtcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIiwiVVJMIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18iLCJpIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18iLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJuIiwiZ2V0dGVyIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJocmVmIiwiZ2xvYmFsIiwic3VwcG9ydCIsIlN5bWJvbCIsIkJsb2IiLCJ2aWV3Q2xhc3NlcyIsImlzQXJyYXlCdWZmZXJWaWV3IiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJpbmRleE9mIiwibm9ybWFsaXplTmFtZSIsIm5hbWUiLCJUeXBlRXJyb3IiLCJ0b0xvd2VyQ2FzZSIsIm5vcm1hbGl6ZVZhbHVlIiwidmFsdWUiLCJpdGVyYXRvckZvciIsIml0ZW1zIiwiaXRlcmF0b3IiLCJuZXh0Iiwic2hpZnQiLCJkb25lIiwiSGVhZGVycyIsImhlYWRlcnMiLCJmb3JFYWNoIiwiYXBwZW5kIiwiQXJyYXkiLCJpc0FycmF5IiwiaGVhZGVyIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImNvbnN1bWVkIiwiYm9keSIsImJvZHlVc2VkIiwiUHJvbWlzZSIsInJlamVjdCIsImZpbGVSZWFkZXJSZWFkeSIsInJlYWRlciIsInJlc29sdmUiLCJvbmxvYWQiLCJvbmVycm9yIiwiZXJyb3IiLCJyZWFkQmxvYkFzQXJyYXlCdWZmZXIiLCJibG9iIiwiRmlsZVJlYWRlciIsInByb21pc2UiLCJyZWFkQXNBcnJheUJ1ZmZlciIsImJ1ZmZlckNsb25lIiwiYnVmIiwidmlldyIsIlVpbnQ4QXJyYXkiLCJieXRlTGVuZ3RoIiwic2V0IiwiYnVmZmVyIiwiQm9keSIsIl9pbml0Qm9keSIsIl9ib2R5SW5pdCIsIl9ib2R5VGV4dCIsImlzUHJvdG90eXBlT2YiLCJfYm9keUJsb2IiLCJGb3JtRGF0YSIsIl9ib2R5Rm9ybURhdGEiLCJVUkxTZWFyY2hQYXJhbXMiLCJEYXRhVmlldyIsIl9ib2R5QXJyYXlCdWZmZXIiLCJ0eXBlIiwicmVqZWN0ZWQiLCJhcnJheUJ1ZmZlciIsImJ5dGVPZmZzZXQiLCJ0aGVuIiwidGV4dCIsInJlYWRBc1RleHQiLCJjaGFycyIsImZyb21DaGFyQ29kZSIsInJlYWRBcnJheUJ1ZmZlckFzVGV4dCIsImZvcm1EYXRhIiwiZGVjb2RlIiwianNvbiIsInBhcnNlIiwib2xkVmFsdWUiLCJoYXMiLCJjYWxsYmFjayIsInRoaXNBcmciLCJrZXlzIiwidmFsdWVzIiwiZW50cmllcyIsIm1ldGhvZHMiLCJSZXF1ZXN0IiwiaW5wdXQiLCJtZXRob2QiLCJ1cGNhc2VkIiwiY3JlZGVudGlhbHMiLCJtb2RlIiwic2lnbmFsIiwidG9VcHBlckNhc2UiLCJyZWZlcnJlciIsImNhY2hlIiwicmVQYXJhbVNlYXJjaCIsIkRhdGUiLCJnZXRUaW1lIiwiZm9ybSIsInRyaW0iLCJzcGxpdCIsImJ5dGVzIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiUmVzcG9uc2UiLCJib2R5SW5pdCIsInN0YXR1cyIsIm9rIiwic3RhdHVzVGV4dCIsImNsb25lIiwicmVzcG9uc2UiLCJyZWRpcmVjdFN0YXR1c2VzIiwicmVkaXJlY3QiLCJSYW5nZUVycm9yIiwiRE9NRXhjZXB0aW9uIiwiZXJyIiwibWVzc2FnZSIsInN0YWNrIiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJmZXRjaCIsImluaXQiLCJyZXF1ZXN0IiwiYWJvcnRlZCIsInhociIsIlhNTEh0dHBSZXF1ZXN0IiwiYWJvcnRYaHIiLCJhYm9ydCIsInJhd0hlYWRlcnMiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJzdWJzdHIiLCJsaW5lIiwicGFydHMiLCJyZXNwb25zZVVSTCIsInJlc3BvbnNlVGV4dCIsInNldFRpbWVvdXQiLCJvbnRpbWVvdXQiLCJvbmFib3J0Iiwib3BlbiIsImZpeFVybCIsIndpdGhDcmVkZW50aWFscyIsInJlc3BvbnNlVHlwZSIsInNldFJlcXVlc3RIZWFkZXIiLCJhZGRFdmVudExpc3RlbmVyIiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJzZW5kIiwicG9seWZpbGwiLCJwcmV2ZW50RGVmYXVsdCIsInVzZXJuYW1lSW5wdXQiLCJyZXNwIiwiY2xhc3NMaXN0IiwicmVwb3NBcnIiLCJyZXBvc0xpc3QiLCJyZXBvc0xpc3RFbGVtZW50IiwiaW5uZXJIVE1MIiwiY2xvbmVSZXBvc0xpc3RFbGVtZW50IiwiY2xvbmVOb2RlIiwiaW5uZXJUZXh0IiwiZGVzY09mUmVwb3NpdG9yeSIsImRlc2NyaXB0aW9uIiwic2V0RGVzY3JpcHRpb25PZlJlcG9zaXRvcnkiLCJsYW5nT2ZSZXBvc2l0b3J5Q2lyY2xlIiwibGFuZ09mUmVwb3NpdG9yeSIsImxhbmd1YWdlIiwiY29sb3IiLCJzZXRMYW5ndWFnZU9mUmVwb3NpdG9yeSIsInN0YXJzT2ZSZXBvc2l0b3J5Iiwic3RhcmdhemVyc19jb3VudCIsInNldFN0YXJzT2ZSZXBvc2l0b3J5IiwiZm9ya3NPZlJlcG9zaXRvcnkiLCJmb3JrcyIsInNldEZvcmtzT2ZSZXBvc2l0b3J5IiwiaW5zZXJ0VXNlclJlcG9zIiwic29ydCIsInNvcnRlZERhdGEiLCJyZXBvc0F2YXRhciIsImFkZCIsImF2YXRhclVybCIsImxvYWRVc2VyQXZhdGFyIiwiYXZhdGFyRGF0YSIsInVzZXJuYW1lT2ZSZXBvcyIsImxvZ2luIiwibG9hZFVzZXJOYW1lIiwiY2F0Y2giLCJyZWxvYWQiLCJsb2FkVXNlclJlcG9zIl0sInNvdXJjZVJvb3QiOiIifQ==