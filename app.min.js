(()=>{"use strict";var n={713:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,'.main__find-user {\n  display: flex;\n  justify-content: center;\n  margin: 2rem 0;\n  width: 90%;\n}\n\n.main__form-instruction {\n  display: flex;\n  align-items: center;\n  /* background: linear-gradient(\n    345deg,\n    var(--purpleElementsColor) 0%,\n    var(--purpleElementsColorHover) 30%,\n    var(--purpleElementsColorHover) 50%,\n    var(--purpleElementsColorHover) 70%,\n    var(--purpleElementsColor) 100%\n  );\n  background-color: var(--purpleElementsColor); */\n\n  border: 3px solid var(--buttonGreyColor);\n  border-radius: 10px;\n  margin-top: 2rem;\n  padding: 2rem 2rem;\n  display: flex;\n  justify-content: center;\n  width: 90%;\n}\n\n.fa-search {\n  font-size: 2em;\n  color: var(--purpleElementsColor);\n}\n\n.form-instruction__text {\n  text-align: center;\n  font-size: 1.3rem;\n  color: var(--purpleElementsColor);\n  font-weight: 500;\n}\n\n.find-user__form {\n  width: 100%;\n  display: grid;\n  grid-template-columns: 80% 20%;\n}\n\n.form__input {\n  font-family: "Poppins", sans-serif;\n  border: none;\n  font-size: 1.3rem;\n  color: var(--darkFontColor);\n}\n\n.form__input--username {\n  border: 1px solid var(--fontGreyColor);\n  border-radius: 6px 0 0 6px;\n  padding: 0.75rem 1rem;\n  width: 100%;\n  background-color: var(--mainBgc);\n}\n\n.form__input--username::placeholder {\n  color: var(--fontGreyColor);\n}\n\n.form__input--username:focus {\n  outline: 2px solid var(--purpleElementsColor);\n  outline-offset: -2px;\n}\n\n.form__input--submit {\n  border: none;\n  border-radius: 0 6px 6px 0;\n  background-color: var(--purpleElementsColor);\n  letter-spacing: 0.05rem;\n  color: var(--whiteColor);\n  padding: 0.5rem 1.4rem;\n  width: 100%;\n  transform: translate3d(0, 0, 0);\n  transition: 0.15s ease-in-out;\n  -webkit-appearance: none;\n}\n\n.form__input--submit:hover {\n  -webkit-appearance: none;\n  background-color: var(--purpleElementsColorHover);\n  cursor: pointer;\n}\n\n@media (min-width: 768px) {\n  .main__find-user {\n    width: 100%;\n  }\n\n  .main__form-instruction {\n    width: 100%;\n  }\n\n  .form__input {\n    font-size: 1.4rem;\n  }\n}\n',"",{version:3,sources:["webpack://./src/styles/form.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,uBAAuB;EACvB,cAAc;EACd,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB;;;;;;;;iDAQ+C;;EAE/C,wCAAwC;EACxC,mBAAmB;EACnB,gBAAgB;EAChB,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,UAAU;AACZ;;AAEA;EACE,cAAc;EACd,iCAAiC;AACnC;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,iCAAiC;EACjC,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,kCAAkC;EAClC,YAAY;EACZ,iBAAiB;EACjB,2BAA2B;AAC7B;;AAEA;EACE,sCAAsC;EACtC,0BAA0B;EAC1B,qBAAqB;EACrB,WAAW;EACX,gCAAgC;AAClC;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,6CAA6C;EAC7C,oBAAoB;AACtB;;AAEA;EACE,YAAY;EACZ,0BAA0B;EAC1B,4CAA4C;EAC5C,uBAAuB;EACvB,wBAAwB;EACxB,sBAAsB;EACtB,WAAW;EACX,+BAA+B;EAC/B,6BAA6B;EAC7B,wBAAwB;AAC1B;;AAEA;EACE,wBAAwB;EACxB,iDAAiD;EACjD,eAAe;AACjB;;AAEA;EACE;IACE,WAAW;EACb;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,iBAAiB;EACnB;AACF",sourcesContent:['.main__find-user {\n  display: flex;\n  justify-content: center;\n  margin: 2rem 0;\n  width: 90%;\n}\n\n.main__form-instruction {\n  display: flex;\n  align-items: center;\n  /* background: linear-gradient(\n    345deg,\n    var(--purpleElementsColor) 0%,\n    var(--purpleElementsColorHover) 30%,\n    var(--purpleElementsColorHover) 50%,\n    var(--purpleElementsColorHover) 70%,\n    var(--purpleElementsColor) 100%\n  );\n  background-color: var(--purpleElementsColor); */\n\n  border: 3px solid var(--buttonGreyColor);\n  border-radius: 10px;\n  margin-top: 2rem;\n  padding: 2rem 2rem;\n  display: flex;\n  justify-content: center;\n  width: 90%;\n}\n\n.fa-search {\n  font-size: 2em;\n  color: var(--purpleElementsColor);\n}\n\n.form-instruction__text {\n  text-align: center;\n  font-size: 1.3rem;\n  color: var(--purpleElementsColor);\n  font-weight: 500;\n}\n\n.find-user__form {\n  width: 100%;\n  display: grid;\n  grid-template-columns: 80% 20%;\n}\n\n.form__input {\n  font-family: "Poppins", sans-serif;\n  border: none;\n  font-size: 1.3rem;\n  color: var(--darkFontColor);\n}\n\n.form__input--username {\n  border: 1px solid var(--fontGreyColor);\n  border-radius: 6px 0 0 6px;\n  padding: 0.75rem 1rem;\n  width: 100%;\n  background-color: var(--mainBgc);\n}\n\n.form__input--username::placeholder {\n  color: var(--fontGreyColor);\n}\n\n.form__input--username:focus {\n  outline: 2px solid var(--purpleElementsColor);\n  outline-offset: -2px;\n}\n\n.form__input--submit {\n  border: none;\n  border-radius: 0 6px 6px 0;\n  background-color: var(--purpleElementsColor);\n  letter-spacing: 0.05rem;\n  color: var(--whiteColor);\n  padding: 0.5rem 1.4rem;\n  width: 100%;\n  transform: translate3d(0, 0, 0);\n  transition: 0.15s ease-in-out;\n  -webkit-appearance: none;\n}\n\n.form__input--submit:hover {\n  -webkit-appearance: none;\n  background-color: var(--purpleElementsColorHover);\n  cursor: pointer;\n}\n\n@media (min-width: 768px) {\n  .main__find-user {\n    width: 100%;\n  }\n\n  .main__form-instruction {\n    width: 100%;\n  }\n\n  .form__input {\n    font-size: 1.4rem;\n  }\n}\n'],sourceRoot:""}]);const s=a},756:(n,e,t)=>{t.d(e,{Z:()=>h});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),s=t(951),A=t(713),l=t(373),c=t(667),u=t.n(c),p=new URL(t(244),t.b),d=new URL(t(154),t.b),m=a()(o());m.i(s.Z),m.i(A.Z),m.i(l.Z);var f=u()(p),C=u()(d);m.push([n.id,':root {\n  --blackColor: #000000;\n  --blueElementsColor: #19dbfe;\n  --buttonGreyColor: #f2f2f2;\n  --darkFontColor: #333333;\n  --fontGreyColor: #b6b6b6;\n  --fontDescriptionColor: #9e9e9e;\n  --mainBgc: #fcfcfc;\n  --purpleElementsColor: #2b00d4;\n  --purpleElementsColorHover: #7254ec;\n  --whiteColor: #ffffff;\n  --starColor: #ffd700;\n  --jsColor: #efd81d;\n  --errorBorder: #ff0033;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: "Poppins", sans-serif;\n  font-size: 10px;\n}\n\nbody {\n  width: 100%;\n  background-color: var(--mainBgc);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.wrapper {\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n}\n\n.main {\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n@media (min-width: 768px) {\n  .wrapper {\n    width: 100%;\n  }\n  .wrapper::before {\n    width: 100%;\n    height: 100%;\n    max-height: 400px;\n    content: " ";\n    background-image: url('+f+');\n    background-size: cover;\n    background-repeat: no-repeat;\n    position: absolute;\n    opacity: 0.07;\n    z-index: -1;\n    left: 0;\n    top: -20px;\n  }\n\n  .wrapper::after {\n    width: 100%;\n    height: 100%;\n    max-height: 400px;\n    content: " ";\n    background-image: url('+C+");\n    background-repeat: no-repeat;\n    background-size: cover;\n    position: absolute;\n    opacity: 0.05;\n    z-index: -1;\n    left: 0;\n    top: 0;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAIA;EACE,qBAAqB;EACrB,4BAA4B;EAC5B,0BAA0B;EAC1B,wBAAwB;EACxB,wBAAwB;EACxB,+BAA+B;EAC/B,kBAAkB;EAClB,8BAA8B;EAC9B,mCAAmC;EACnC,qBAAqB;EACrB,oBAAoB;EACpB,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,kCAAkC;EAClC,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,gCAAgC;EAChC,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE;IACE,WAAW;EACb;EACA;IACE,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,YAAY;IACZ,yDAAyC;IACzC,sBAAsB;IACtB,4BAA4B;IAC5B,kBAAkB;IAClB,aAAa;IACb,WAAW;IACX,OAAO;IACP,UAAU;EACZ;;EAEA;IACE,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,YAAY;IACZ,yDAAyC;IACzC,4BAA4B;IAC5B,sBAAsB;IACtB,kBAAkB;IAClB,aAAa;IACb,WAAW;IACX,OAAO;IACP,MAAM;EACR;AACF",sourcesContent:['@import "./top.css";\n@import "./form.css";\n@import "./repo.css";\n\n:root {\n  --blackColor: #000000;\n  --blueElementsColor: #19dbfe;\n  --buttonGreyColor: #f2f2f2;\n  --darkFontColor: #333333;\n  --fontGreyColor: #b6b6b6;\n  --fontDescriptionColor: #9e9e9e;\n  --mainBgc: #fcfcfc;\n  --purpleElementsColor: #2b00d4;\n  --purpleElementsColorHover: #7254ec;\n  --whiteColor: #ffffff;\n  --starColor: #ffd700;\n  --jsColor: #efd81d;\n  --errorBorder: #ff0033;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: "Poppins", sans-serif;\n  font-size: 10px;\n}\n\nbody {\n  width: 100%;\n  background-color: var(--mainBgc);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.wrapper {\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n}\n\n.main {\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n@media (min-width: 768px) {\n  .wrapper {\n    width: 100%;\n  }\n  .wrapper::before {\n    width: 100%;\n    height: 100%;\n    max-height: 400px;\n    content: " ";\n    background-image: url(../assets/bg_1.svg);\n    background-size: cover;\n    background-repeat: no-repeat;\n    position: absolute;\n    opacity: 0.07;\n    z-index: -1;\n    left: 0;\n    top: -20px;\n  }\n\n  .wrapper::after {\n    width: 100%;\n    height: 100%;\n    max-height: 400px;\n    content: " ";\n    background-image: url(../assets/bg_2.svg);\n    background-repeat: no-repeat;\n    background-size: cover;\n    position: absolute;\n    opacity: 0.05;\n    z-index: -1;\n    left: 0;\n    top: 0;\n  }\n}\n'],sourceRoot:""}]);const h=m},373:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".main__repositories,\n.repositories__user,\n.user__picture {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: var(--darkFontColor);\n}\n\n.repositories__loading--active {\n  display: flex;\n}\n\n.repositories__user {\n  display: none;\n  margin-top: 2rem;\n}\n\n.repositories__user--active {\n  display: flex;\n}\n\n.user__name {\n  margin: 0.5rem 0 1.5rem 0;\n  color: var(--fontGreyColor);\n}\n\n.user__img {\n  width: 50%;\n  max-width: 400px;\n  border-radius: 50%;\n}\n\n.repositories__list {\n  width: 90%;\n  list-style: none;\n}\n\n.list__element {\n  width: 100%;\n  border: 1px solid var(--buttonGreyColor);\n  border-radius: 5px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\n.element-repo-name__title {\n  font-size: 1.8rem;\n  margin-bottom: 0.3rem;\n  color: var(--purpleElementsColor);\n}\n\n.element-repo-name__id {\n  font-size: 1.1rem;\n  font-weight: 400;\n  color: var(--fontGreyColor);\n}\n\n.list__element-repo-desc {\n  margin: 1rem 0;\n}\n\n.element-repo-desc__text {\n  color: var(--fontDescriptionColor);\n  font-size: 1.15rem;\n}\n\n.list__element-repo-details {\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.2rem;\n  margin-top: 1rem;\n}\n\n.fas {\n  margin-right: 0.5rem;\n}\n\n.fa-circle {\n  font-size: 0.8em;\n  color: var(--jsColor);\n}\n\n.fa-star {\n  color: var(--starColor);\n}\n\n/* prototype */\n\n.list__element--prototype {\n  display: none;\n}\n\n@media (min-width: 768px) {\n  .repositories__user {\n    margin-top: 3rem;\n  }\n  .user__name {\n    margin: 1rem 0 3rem 0;\n  }\n\n  .repositories__list {\n    width: 100%;\n  }\n\n  .list__element {\n    max-width: 600px;\n    margin-bottom: 1.5rem;\n  }\n\n  .list__element-repo-name {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .element-repo-name__title {\n    width: 85%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: 2.3rem;\n    margin-bottom: 0.5rem;\n  }\n\n  .list__element-repo-desc {\n    margin-bottom: 1.5rem;\n  }\n\n  .element-repo-desc__text {\n    color: var(--fontDescriptionColor);\n    font-size: 1.3rem;\n  }\n\n  .list__element-repo-details {\n    font-size: 1.3rem;\n  }\n\n  .list__element-repo-details {\n    display: grid;\n    grid-template-columns: calc(100% / 3) calc(100% / 3) calc(100% / 3);\n    justify-items: center;\n    font-size: 1.3rem;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/repo.css"],names:[],mappings:"AAAA;;;EAGE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,2BAA2B;AAC7B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,yBAAyB;EACzB,2BAA2B;AAC7B;;AAEA;EACE,UAAU;EACV,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,UAAU;EACV,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,wCAAwC;EACxC,kBAAkB;EAClB,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,qBAAqB;EACrB,iCAAiC;AACnC;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,2BAA2B;AAC7B;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,kCAAkC;EAClC,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,gBAAgB;EAChB,qBAAqB;AACvB;;AAEA;EACE,uBAAuB;AACzB;;AAEA,cAAc;;AAEd;EACE,aAAa;AACf;;AAEA;EACE;IACE,gBAAgB;EAClB;EACA;IACE,qBAAqB;EACvB;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,gBAAgB;IAChB,qBAAqB;EACvB;;EAEA;IACE,aAAa;IACb,mBAAmB;IACnB,8BAA8B;EAChC;;EAEA;IACE,UAAU;IACV,gBAAgB;IAChB,uBAAuB;IACvB,iBAAiB;IACjB,qBAAqB;EACvB;;EAEA;IACE,qBAAqB;EACvB;;EAEA;IACE,kCAAkC;IAClC,iBAAiB;EACnB;;EAEA;IACE,iBAAiB;EACnB;;EAEA;IACE,aAAa;IACb,mEAAmE;IACnE,qBAAqB;IACrB,iBAAiB;EACnB;AACF",sourcesContent:[".main__repositories,\n.repositories__user,\n.user__picture {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: var(--darkFontColor);\n}\n\n.repositories__loading--active {\n  display: flex;\n}\n\n.repositories__user {\n  display: none;\n  margin-top: 2rem;\n}\n\n.repositories__user--active {\n  display: flex;\n}\n\n.user__name {\n  margin: 0.5rem 0 1.5rem 0;\n  color: var(--fontGreyColor);\n}\n\n.user__img {\n  width: 50%;\n  max-width: 400px;\n  border-radius: 50%;\n}\n\n.repositories__list {\n  width: 90%;\n  list-style: none;\n}\n\n.list__element {\n  width: 100%;\n  border: 1px solid var(--buttonGreyColor);\n  border-radius: 5px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\n.element-repo-name__title {\n  font-size: 1.8rem;\n  margin-bottom: 0.3rem;\n  color: var(--purpleElementsColor);\n}\n\n.element-repo-name__id {\n  font-size: 1.1rem;\n  font-weight: 400;\n  color: var(--fontGreyColor);\n}\n\n.list__element-repo-desc {\n  margin: 1rem 0;\n}\n\n.element-repo-desc__text {\n  color: var(--fontDescriptionColor);\n  font-size: 1.15rem;\n}\n\n.list__element-repo-details {\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.2rem;\n  margin-top: 1rem;\n}\n\n.fas {\n  margin-right: 0.5rem;\n}\n\n.fa-circle {\n  font-size: 0.8em;\n  color: var(--jsColor);\n}\n\n.fa-star {\n  color: var(--starColor);\n}\n\n/* prototype */\n\n.list__element--prototype {\n  display: none;\n}\n\n@media (min-width: 768px) {\n  .repositories__user {\n    margin-top: 3rem;\n  }\n  .user__name {\n    margin: 1rem 0 3rem 0;\n  }\n\n  .repositories__list {\n    width: 100%;\n  }\n\n  .list__element {\n    max-width: 600px;\n    margin-bottom: 1.5rem;\n  }\n\n  .list__element-repo-name {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .element-repo-name__title {\n    width: 85%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: 2.3rem;\n    margin-bottom: 0.5rem;\n  }\n\n  .list__element-repo-desc {\n    margin-bottom: 1.5rem;\n  }\n\n  .element-repo-desc__text {\n    color: var(--fontDescriptionColor);\n    font-size: 1.3rem;\n  }\n\n  .list__element-repo-details {\n    font-size: 1.3rem;\n  }\n\n  .list__element-repo-details {\n    display: grid;\n    grid-template-columns: calc(100% / 3) calc(100% / 3) calc(100% / 3);\n    justify-items: center;\n    font-size: 1.3rem;\n  }\n}\n"],sourceRoot:""}]);const s=a},951:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".header {\n  margin: 3rem 0 2rem 0;\n  animation-duration: 1.3s;\n  animation-name: headerOpening;\n  animation-iteration-count: 1;\n}\n\n.header__title {\n  font-size: 3rem;\n  color: var(--purpleElementsColor);\n}\n\n.header__title--color {\n  color: var(--blueElementsColor);\n}\n\n.header__title,\n.header__title--color {\n  font-weight: 600;\n}\n\n.fa-github {\n  font-size: 0.75em;\n  margin-left: 0.05em;\n}\n\n@keyframes headerOpening {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n@media (min-width: 768px) {\n  .header {\n    margin-top: 10rem;\n  }\n\n  .header__title {\n    font-size: 4rem;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/top.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,wBAAwB;EACxB,6BAA6B;EAC7B,4BAA4B;AAC9B;;AAEA;EACE,eAAe;EACf,iCAAiC;AACnC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;;EAEE,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE;IACE,UAAU;EACZ;;EAEA;IACE,UAAU;EACZ;AACF;;AAEA;EACE;IACE,iBAAiB;EACnB;;EAEA;IACE,eAAe;EACjB;AACF",sourcesContent:[".header {\n  margin: 3rem 0 2rem 0;\n  animation-duration: 1.3s;\n  animation-name: headerOpening;\n  animation-iteration-count: 1;\n}\n\n.header__title {\n  font-size: 3rem;\n  color: var(--purpleElementsColor);\n}\n\n.header__title--color {\n  color: var(--blueElementsColor);\n}\n\n.header__title,\n.header__title--color {\n  font-weight: 600;\n}\n\n.fa-github {\n  font-size: 0.75em;\n  margin-left: 0.05em;\n}\n\n@keyframes headerOpening {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n@media (min-width: 768px) {\n  .header {\n    margin-top: 10rem;\n  }\n\n  .header__title {\n    font-size: 4rem;\n  }\n}\n"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);r&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],s=0;s<n.length;s++){var A=n[s],l=r.base?A[0]+r.base:A[0],c=i[l]||0,u="".concat(l," ").concat(c);i[l]=c+1;var p=t(u),d={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(d);else{var m=o(d,r);r.byIndex=s,e.splice(s,0,{identifier:u,updater:m,references:1})}a.push(u)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var A=r(n,o),l=0;l<i.length;l++){var c=t(i[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},244:(n,e,t)=>{n.exports=t.p+"b806803127dfe9e30a2d.svg"},154:(n,e,t)=>{n.exports=t.p+"95c79d43670629839c14.svg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n="undefined"!=typeof globalThis&&globalThis||"undefined"!=typeof self&&self||void 0!==n&&n,e="URLSearchParams"in n,t="Symbol"in n&&"iterator"in Symbol,r="FileReader"in n&&"Blob"in n&&function(){try{return new Blob,!0}catch(n){return!1}}(),o="FormData"in n,i="ArrayBuffer"in n;if(i)var a=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],s=ArrayBuffer.isView||function(n){return n&&a.indexOf(Object.prototype.toString.call(n))>-1};function A(n){if("string"!=typeof n&&(n=String(n)),/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(n)||""===n)throw new TypeError('Invalid character in header field name: "'+n+'"');return n.toLowerCase()}function l(n){return"string"!=typeof n&&(n=String(n)),n}function c(n){var e={next:function(){var e=n.shift();return{done:void 0===e,value:e}}};return t&&(e[Symbol.iterator]=function(){return e}),e}function u(n){this.map={},n instanceof u?n.forEach((function(n,e){this.append(e,n)}),this):Array.isArray(n)?n.forEach((function(n){this.append(n[0],n[1])}),this):n&&Object.getOwnPropertyNames(n).forEach((function(e){this.append(e,n[e])}),this)}function p(n){if(n.bodyUsed)return Promise.reject(new TypeError("Already read"));n.bodyUsed=!0}function d(n){return new Promise((function(e,t){n.onload=function(){e(n.result)},n.onerror=function(){t(n.error)}}))}function m(n){var e=new FileReader,t=d(e);return e.readAsArrayBuffer(n),t}function f(n){if(n.slice)return n.slice(0);var e=new Uint8Array(n.byteLength);return e.set(new Uint8Array(n)),e.buffer}function C(){return this.bodyUsed=!1,this._initBody=function(n){var t;this.bodyUsed=this.bodyUsed,this._bodyInit=n,n?"string"==typeof n?this._bodyText=n:r&&Blob.prototype.isPrototypeOf(n)?this._bodyBlob=n:o&&FormData.prototype.isPrototypeOf(n)?this._bodyFormData=n:e&&URLSearchParams.prototype.isPrototypeOf(n)?this._bodyText=n.toString():i&&r&&(t=n)&&DataView.prototype.isPrototypeOf(t)?(this._bodyArrayBuffer=f(n.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):i&&(ArrayBuffer.prototype.isPrototypeOf(n)||s(n))?this._bodyArrayBuffer=f(n):this._bodyText=n=Object.prototype.toString.call(n):this._bodyText="",this.headers.get("content-type")||("string"==typeof n?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):e&&URLSearchParams.prototype.isPrototypeOf(n)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},r&&(this.blob=function(){var n=p(this);if(n)return n;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?p(this)||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer)):this.blob().then(m)}),this.text=function(){var n,e,t,r=p(this);if(r)return r;if(this._bodyBlob)return n=this._bodyBlob,t=d(e=new FileReader),e.readAsText(n),t;if(this._bodyArrayBuffer)return Promise.resolve(function(n){for(var e=new Uint8Array(n),t=new Array(e.length),r=0;r<e.length;r++)t[r]=String.fromCharCode(e[r]);return t.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},o&&(this.formData=function(){return this.text().then(B)}),this.json=function(){return this.text().then(JSON.parse)},this}u.prototype.append=function(n,e){n=A(n),e=l(e);var t=this.map[n];this.map[n]=t?t+", "+e:e},u.prototype.delete=function(n){delete this.map[A(n)]},u.prototype.get=function(n){return n=A(n),this.has(n)?this.map[n]:null},u.prototype.has=function(n){return this.map.hasOwnProperty(A(n))},u.prototype.set=function(n,e){this.map[A(n)]=l(e)},u.prototype.forEach=function(n,e){for(var t in this.map)this.map.hasOwnProperty(t)&&n.call(e,this.map[t],t,this)},u.prototype.keys=function(){var n=[];return this.forEach((function(e,t){n.push(t)})),c(n)},u.prototype.values=function(){var n=[];return this.forEach((function(e){n.push(e)})),c(n)},u.prototype.entries=function(){var n=[];return this.forEach((function(e,t){n.push([t,e])})),c(n)},t&&(u.prototype[Symbol.iterator]=u.prototype.entries);var h=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function E(n,e){if(!(this instanceof E))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');var t,r,o=(e=e||{}).body;if(n instanceof E){if(n.bodyUsed)throw new TypeError("Already read");this.url=n.url,this.credentials=n.credentials,e.headers||(this.headers=new u(n.headers)),this.method=n.method,this.mode=n.mode,this.signal=n.signal,o||null==n._bodyInit||(o=n._bodyInit,n.bodyUsed=!0)}else this.url=String(n);if(this.credentials=e.credentials||this.credentials||"same-origin",!e.headers&&this.headers||(this.headers=new u(e.headers)),this.method=(r=(t=e.method||this.method||"GET").toUpperCase(),h.indexOf(r)>-1?r:t),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&o)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(o),!("GET"!==this.method&&"HEAD"!==this.method||"no-store"!==e.cache&&"no-cache"!==e.cache)){var i=/([?&])_=[^&]*/;i.test(this.url)?this.url=this.url.replace(i,"$1_="+(new Date).getTime()):this.url+=(/\?/.test(this.url)?"&":"?")+"_="+(new Date).getTime()}}function B(n){var e=new FormData;return n.trim().split("&").forEach((function(n){if(n){var t=n.split("="),r=t.shift().replace(/\+/g," "),o=t.join("=").replace(/\+/g," ");e.append(decodeURIComponent(r),decodeURIComponent(o))}})),e}function y(n,e){if(!(this instanceof y))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');e||(e={}),this.type="default",this.status=void 0===e.status?200:e.status,this.ok=this.status>=200&&this.status<300,this.statusText=void 0===e.statusText?"":""+e.statusText,this.headers=new u(e.headers),this.url=e.url||"",this._initBody(n)}E.prototype.clone=function(){return new E(this,{body:this._bodyInit})},C.call(E.prototype),C.call(y.prototype),y.prototype.clone=function(){return new y(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new u(this.headers),url:this.url})},y.error=function(){var n=new y(null,{status:0,statusText:""});return n.type="error",n};var g=[301,302,303,307,308];y.redirect=function(n,e){if(-1===g.indexOf(e))throw new RangeError("Invalid status code");return new y(null,{status:e,headers:{location:n}})};var b=n.DOMException;try{new b}catch(n){(b=function(n,e){this.message=n,this.name=e;var t=Error(n);this.stack=t.stack}).prototype=Object.create(Error.prototype),b.prototype.constructor=b}function _(e,t){return new Promise((function(o,a){var s=new E(e,t);if(s.signal&&s.signal.aborted)return a(new b("Aborted","AbortError"));var A=new XMLHttpRequest;function c(){A.abort()}A.onload=function(){var n,e,t={status:A.status,statusText:A.statusText,headers:(n=A.getAllResponseHeaders()||"",e=new u,n.replace(/\r?\n[\t ]+/g," ").split("\r").map((function(n){return 0===n.indexOf("\n")?n.substr(1,n.length):n})).forEach((function(n){var t=n.split(":"),r=t.shift().trim();if(r){var o=t.join(":").trim();e.append(r,o)}})),e)};t.url="responseURL"in A?A.responseURL:t.headers.get("X-Request-URL");var r="response"in A?A.response:A.responseText;setTimeout((function(){o(new y(r,t))}),0)},A.onerror=function(){setTimeout((function(){a(new TypeError("Network request failed"))}),0)},A.ontimeout=function(){setTimeout((function(){a(new TypeError("Network request failed"))}),0)},A.onabort=function(){setTimeout((function(){a(new b("Aborted","AbortError"))}),0)},A.open(s.method,function(e){try{return""===e&&n.location.href?n.location.href:e}catch(n){return e}}(s.url),!0),"include"===s.credentials?A.withCredentials=!0:"omit"===s.credentials&&(A.withCredentials=!1),"responseType"in A&&(r?A.responseType="blob":i&&s.headers.get("Content-Type")&&-1!==s.headers.get("Content-Type").indexOf("application/octet-stream")&&(A.responseType="arraybuffer")),!t||"object"!=typeof t.headers||t.headers instanceof u?s.headers.forEach((function(n,e){A.setRequestHeader(e,n)})):Object.getOwnPropertyNames(t.headers).forEach((function(n){A.setRequestHeader(n,l(t.headers[n]))})),s.signal&&(s.signal.addEventListener("abort",c),A.onreadystatechange=function(){4===A.readyState&&s.signal.removeEventListener("abort",c)}),A.send(void 0===s._bodyInit?null:s._bodyInit)}))}_.polyfill=!0,n.fetch||(n.fetch=_,n.Headers=u,n.Request=E,n.Response=y)})(),(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),s=t(565),A=t.n(s),l=t(216),c=t.n(l),u=t(589),p=t.n(u),d=t(756),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=c(),e()(d.Z,m),d.Z&&d.Z.locals&&d.Z.locals;document.querySelector(".find-user__form").addEventListener("submit",(function(n){n.preventDefault(),document.querySelector(".form__input--username").value.length>=1?function(){let n=document.querySelector(".form__input--username");fetch(`https://api.github.com/users/${n.value}/repos?page=1&per_page=1000`).then((n=>n.ok?n.json():Promise.reject(n))).then((e=>{n.value="",n.classList.remove("form__input--username-error"),function(n){const e=document.querySelector(".repositories__list"),t=document.querySelector(".list__element");e.innerHTML="",n.forEach((n=>{const r=t.cloneNode(!0);r.classList.remove("list__element--prototype"),r.querySelector(".element-repo-name__title").innerText=n.name,r.querySelector(".id__number").innerText=n.id,function(){const e=r.querySelector(".element-repo-desc__text");n.description?e.innerText=n.description:e.innerText="No description"}(),function(){const e=r.querySelector(".fa-circle"),t=r.querySelector(".element-repo-details__lang-text");"JavaScript"===n.language?(e.style.color="#f1e05a",t.innerText=n.language):"TypeScript"===n.language?(e.style.color="#2b7489",t.innerText=n.language):"HTML"===n.language?(e.style.color="#e44b23",t.innerText=n.language):"CSS"===n.language?(e.style.color="#563d7c",t.innerText=n.language):"PHP"===n.language?(e.style.color="#4F5D95",t.innerText=n.language):"Vue"===n.language?(e.style.color="#2c3e50",t.innerText=n.language):"Go"===n.language?(e.style.color="#375eab",t.innerText=n.language):"Swift"===n.language?(e.style.color="#ffac45",t.innerText=n.language):"Java"===n.language?(e.style.color="#b07219",t.innerText=n.language):"Rust"===n.language?(e.style.color="#dea584",t.innerText=n.language):"Python"===n.language?(e.style.color="#3572A5",t.innerText=n.language):null===n.language?(e.style.color="#b6b6b6",t.innerText="no data"):(e.style.color="#2b00d4",t.innerText=n.language)}(),function(){const e=r.querySelector(".element-repo-details__stars-text");n.stargazers_count?e.innerText=n.stargazers_count:e.innerText="0"}(),function(){const e=r.querySelector(".element-repo-details__forks-text");n.forks?e.innerText=n.forks:e.innerText="0"}(),e.appendChild(r)}))}(function(n){return n.sort(((n,e)=>e.stargazers_count-n.stargazers_count))}(e)),function(n){document.querySelector(".repositories__user").classList.add("repositories__user--active");const e=n;document.querySelector(".user__img").setAttribute("src",e)}(function(n){return n[0].owner.avatar_url}(e)),function(n){const e=n[0].owner.login;document.querySelector(".user__name").innerText=`@${e}`}(e)})).catch((e=>{n.value="",n.classList.add("form__input--username-error"),window.location.reload(!0)}))}():window.location.reload(!0)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,